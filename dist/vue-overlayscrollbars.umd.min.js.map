{"version":3,"sources":["webpack://vue-overlayscrollbars/webpack/universalModuleDefinition","webpack://vue-overlayscrollbars/webpack/bootstrap","webpack://vue-overlayscrollbars/./node_modules/overlayscrollbars/js/OverlayScrollbars.js","webpack://vue-overlayscrollbars/./node_modules/current-script-polyfill/currentScript.js","webpack://vue-overlayscrollbars/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-overlayscrollbars/./src/index.js","webpack://vue-overlayscrollbars/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","document","undefined","window","PLUGINNAME","TYPES","f","a","b","u","z","LEXICON","oH","cH","sH","oW","cW","sW","hOP","VENDORS","_jsCache","_cssCache","_cssPrefixes","_jsPrefixes","_cssProperty","cache","resultPossibilities","currVendorWithoutDashes","prefixes","uppercasedName","_firstLetterToUpper","elmStyle","createElement","v","length","replace","_jsAPI","isInterface","fallback","result","toLowerCase","str","charAt","toUpperCase","slice","COMPATIBILITY","wW","innerWidth","documentElement","body","wH","innerHeight","mO","rO","rAF","func","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","x","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","Array","isArray","type","obj","toString","thisObj","proto","aArgs","arguments","fNOP","fBound","apply","concat","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","sqrt","asin","abs","swing","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","selector","elms","el","base","elements","innerHTML","children","querySelectorAll","push","stripAndCollapse","tokens","match","join","matches","elem","nodeList","parentNode","insertAdjacentElement","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","prop","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","getBoundingClientRect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","getClientRects","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","split","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","cssCalc","dummyStyle","strCalc","cssText","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_restrictedMeasuring","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_isTextareaHostGenerated","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssMaxValueCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_viewportScrollSizeCache","_displayIsHiddenCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeReconnectMutationObserver","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_resizeOnMouseTouchDown","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseTouchEnter","_strMouseTouchLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_callbacksInitQeueue","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_imgs","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","isString","imgElementSelector","imgElementLoadEvent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","imgOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","destroy","extName","disconnectMutationObservers","setupResizeObserver","removeExt","setupHostMouseTouchEvents","setupStructureEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","proxyCompleteCallback","refreshScrollbarHandleOffset","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","getElements","elementName","host","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","setupPassiveEventListener","element","eventNames","listener","notPassive","method","events","passive","targetElement","onElementResizedCallback","constMaximum","resizeObserver","strAnimationStartEvent","strChildNodes","generateDiv","observer","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","mutation","doUpdate","attributeName","hostClassNamesChanged","oldValue","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","strOnOff","setupEvent","documentOnSelectStart","bodyMinSizeChanged","bodyMinSize","oldCassNames","newClassNames","currClasses","oldClasses","curr","diff","getArrayDifferences","oldClassNames","currClassNames","idx","mutationType","strClosest","float","bodyMinSizeC","viewportScrollSizeChanged","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","viewportScrollSize","checks","_elem","_props","check","isSizeAffectingCSSProperty","propertyName","flexGrow","flexShrink","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","displayIsHiddenChanged","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","strMinusWidth","updateBorderX","updateBorderY","border","cssMaxValue","String","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","paddingAbsoluteY","ih","iw","cw","paddingElementCSS","textareaCSS","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","hideOverflow4CorrectMeasuring","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentMeasureElementGuaranty","contentSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","maxSize","hideOverflowForceTextarea","previousOverflow","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","strDirection","invertedAutoSize","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","showScrollbarH","refreshScrollbarAppearance","showScrollbarV","hideScrollbarH","hideScrollbarV","setupCornerEvents","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","k","hostElementClassNames","hostElementCSS","textareaUpdateIntervalID","scrollStopTimeoutId","updateTextarea","viewportOnScroll","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","doClearInterval","clearInterval","keyCode","setInterval","nativeOverlayScrollbarsAreActive","setupScrollbarEvents","isHorizontal","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","collected","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollRange","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","_handle","_track","_scrollbar","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","finishedCondition","scrollDistance","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","getCSSTransitionString","isTrack","element1","element2","_l_t","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","extensionOnName","targetCSSObject","prefix","values","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","RegExp","regExpValidate","properties","splitCssStyleByComma","$1","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","attrs","path","splits","splitsLength","extendObj","extendObjRoot","current","initBodyScroll","activeElement","focus","pluginTargetElements","optsIsPlainObj","valid","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","currentScript","scripts","getElementsByTagName","Error","err","res","exec","stack","readyState","Vue","directive","cloned","parse","_os","componentUpdated","unbind"],"mappings":"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A+BnU,OAAOH,EAAO,GAC7CqU,EAAkBlU,OAAOH,EAAO,GAGM,IAAlCqU,EAAkBD,IAAqBG,IACvCA,GAAgB,EAChBT,EAAQrE,eAAiB8E,EACtBR,IAAYphB,IACX2C,EAAcY,KAAdZ,CAAoBye,GACpBA,GAAW,MAiB/B,SAASoB,EAA0BC,EAAqBhY,EAASiY,EAAYvB,EAASrE,GAElF,IAAI3W,EAAOxD,EAAcwD,KACrB2E,EAAUlB,EAAUkB,QACpBO,EAAOzB,EAAUyB,KAGjB6Q,EAAQ,IAAIvG,EACZgN,EAAkB/Y,EAAUnJ,EAAQb,GAGxC,GAAIgjB,GAAcH,GAAlB,CAIA,GAAGpN,EAAUoN,GAAsB,CAC/B,IAAII,EAAOxN,EAAUoN,GAErB,OADAI,EAAKpY,QAAQA,GACNoY,EAIX,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EA+FAC,GACAC,GACAC,GAOAC,GAEAC,GAKAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAKAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,G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","file":"vue-overlayscrollbars.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-overlayscrollbars\"] = factory();\n\telse\n\t\troot[\"vue-overlayscrollbars\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","/*!\n * OverlayScrollbars\n * https://github.com/KingSora/OverlayScrollbars\n *\n * Version: 1.9.1\n *\n * Copyright KingSora | Rene Haas.\n * https://github.com/KingSora\n *\n * Released under the MIT license.\n * Date: 03.08.2019\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd)\n        define(function() { return factory(global, global.document, undefined); });\n    else if (typeof module === 'object' && typeof module.exports === 'object')\n        module.exports = factory(global, global.document, undefined);\n    else\n        factory(global, global.document, undefined);\n}(typeof window !== 'undefined' ? window : this,\n    function(window, document, undefined) {\n        'use strict';\n        var PLUGINNAME = 'OverlayScrollbars';\n        var TYPES = {\n            o : 'object',\n            f : 'function',\n            a : 'array',\n            s : 'string',\n            b : 'boolean',\n            n : 'number',\n            u : 'undefined',\n            z : 'null'\n            //d : 'date',\n            //e : 'error',\n            //r : 'regexp',\n            //y : 'symbol'\n        };\n        var LEXICON = {\n            c : 'class',\n            s : 'style',\n            i : 'id',\n            l : 'length',\n            p : 'prototype',\n            oH : 'offsetHeight',\n            cH : 'clientHeight',\n            sH : 'scrollHeight',\n            oW : 'offsetWidth',\n            cW : 'clientWidth',\n            sW : 'scrollWidth',\n            hOP : 'hasOwnProperty'\n        };\n        var VENDORS = {\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n            _jsCache : { },\n            _cssCache : { },\n            _cssPrefixes : ['-webkit-', '-moz-', '-o-', '-ms-'],\n            _jsPrefixes : ['WebKit', 'Moz', 'O', 'MS'],\n            _cssProperty : function(name) {\n                var cache = this._cssCache;\n\n                if(cache[name])\n                    return cache[name];\n\n                var prefixes = this._cssPrefixes;\n                var uppercasedName = this._firstLetterToUpper(name);\n                var elmStyle = document.createElement('div')[LEXICON.s];\n                var resultPossibilities;\n                var i = 0;\n                var v = 0;\n                var currVendorWithoutDashes;\n\n                for (; i < prefixes.length; i++) {\n                    currVendorWithoutDashes = prefixes[i].replace(/-/g, '');\n                    resultPossibilities = [\n                        name, //transition\n                        prefixes[i] + name, //-webkit-transition\n                        currVendorWithoutDashes + uppercasedName, //webkitTransition\n                        this._firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n                    ];\n                    for(v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n                        if(elmStyle[resultPossibilities[v]] !== undefined) {\n                            cache[name] = resultPossibilities[v];\n                            return resultPossibilities[v];\n                        }\n                    }\n                }\n\n                return null;\n            },\n            _jsAPI : function(name, isInterface, fallback) {\n                var prefixes = this._jsPrefixes;\n                var cache = this._jsCache;\n                var i = 0;\n                var result = cache[name];\n                if(!result) {\n                    result = window[name];\n                    for(; i < prefixes[LEXICON.l]; i++)\n                        result = result || window[(isInterface ? prefixes[i] : prefixes[i].toLowerCase()) + this._firstLetterToUpper(name)];\n                    cache[name] = result;\n                }\n                return result || fallback;\n            },\n            _firstLetterToUpper : function(str) {\n                return str.charAt(0).toUpperCase() + str.slice(1);\n            }\n        };\n        var COMPATIBILITY = {\n            /**\n             * Gets the current window width.\n             * @returns {Number|number} The current window width in pixel.\n             */\n            wW: function() {\n                return window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW];\n            },\n\n            /**\n             * Gets the current window height.\n             * @returns {Number|number} The current window height in pixel.\n             */\n            wH: function() {\n                return window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n            },\n\n            /**\n             * Gets the MutationObserver Object or undefined if not supported.\n             * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\n             */\n            mO: function() {\n                return VENDORS._jsAPI('MutationObserver', true);\n            },\n\n            /**\n             * Gets the ResizeObserver Object or undefined if not supported.\n             * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\n             */\n            rO: function() {\n                return VENDORS._jsAPI('ResizeObserver', true);\n            },\n\n            /**\n             * Gets the RequestAnimationFrame method or it's corresponding polyfill.\n             * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\n             */\n            rAF: function() {\n                return VENDORS._jsAPI('requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); });\n            },\n\n            /**\n             * Gets the CancelAnimationFrame method or it's corresponding polyfill.\n             * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\n             */\n            cAF: function() {\n                return VENDORS._jsAPI('cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); });\n            },\n\n            /**\n             * Gets the current time.\n             * @returns {number} The current time.\n             */\n            now: function() {\n                return Date.now && Date.now() || new Date().getTime();\n            },\n\n            /**\n             * Stops the propagation of the given event.\n             * @param event The event of which the propagation shall be stoped.\n             */\n            stpP: function(event) {\n                if(event.stopPropagation)\n                    event.stopPropagation();\n                else\n                    event.cancelBubble = true;\n            },\n\n            /**\n             * Prevents the default action of the given event.\n             * @param event The event of which the default action shall be prevented.\n             */\n            prvD: function(event) {\n                if(event.preventDefault && event.cancelable)\n                    event.preventDefault();\n                else\n                    event.returnValue = false;\n            },\n\n            /**\n             * Gets the pageX and pageY values of the given mouse event.\n             * @param event The mouse event of which the pageX and pageX shall be got.\n             * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\n             */\n            page: function(event) {\n                event = event.originalEvent || event;\n\n                var strPage = 'page';\n                var strClient = 'client';\n                var strX = 'X';\n                var strY = 'Y';\n                var target = event.target || event.srcElement || document;\n                var eventDoc = target.ownerDocument || document;\n                var doc = eventDoc.documentElement;\n                var body = eventDoc.body;\n\n                //if touch event return return pageX/Y of it\n                if(event.touches !== undefined) {\n                    var touch = event.touches[0];\n                    return {\n                        x : touch[strPage + strX],\n                        y : touch[strPage + strY]\n                    }\n                }\n\n                // Calculate pageX/Y if not native supported\n                if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n\n                    return {\n                        x : event[strClient + strX] +\n                        (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\n                        (doc && doc.clientLeft || body && body.clientLeft || 0),\n                        y : event[strClient + strY] +\n                        (doc && doc.scrollTop || body && body.scrollTop || 0) -\n                        (doc && doc.clientTop || body && body.clientTop || 0)\n                    }\n                }\n                return {\n                    x : event[strPage + strX],\n                    y : event[strPage + strY]\n                };\n            },\n\n            /**\n             * Gets the clicked mouse button of the given mouse event.\n             * @param event The mouse event of which the clicked button shal be got.\n             * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\n             */\n            mBtn: function(event) {\n                var button = event.button;\n                if (!event.which && button !== undefined)\n                    return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n                else\n                    return event.which;\n            },\n\n            /**\n             * Checks whether a item is in the given array and returns its index.\n             * @param item The item of which the position in the array shall be determined.\n             * @param arr The array.\n             * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\n             */\n            inA : function(item, arr) {\n                for (var i = 0; i < arr[LEXICON.l]; i++)\n                    //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n                    try {\n                        if (arr[i] === item)\n                            return i;\n                    }\n                    catch(e) { }\n                return -1;\n            },\n\n            /**\n             * Returns true if the given value is a array.\n             * @param arr The potential array.\n             * @returns {boolean} True if the given value is a array, false otherwise.\n             */\n            isA: function(arr) {\n                var def = Array.isArray;\n                return def ? def(arr) : this.type(arr) == TYPES.a;\n            },\n\n            /**\n             * Determine the internal JavaScript [[Class]] of the given object.\n             * @param obj The object of which the type shall be determined.\n             * @returns {string} The type of the given object.\n             */\n            type: function(obj) {\n                if (obj === undefined)\n                    return obj + \"\";\n                if (obj === null)\n                    return obj + \"\";\n                return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n            },\n\n\n            bind: function(func, thisObj) {\n                if (typeof func != TYPES.f) {\n                    throw \"Can't bind function!\";\n                    // closest thing possible to the ECMAScript 5\n                    // internal IsCallable function\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n                }\n                var proto     = LEXICON.p;\n                var aArgs   = Array[proto].slice.call(arguments, 2);\n                var fNOP    = function() {};\n                var fBound  = function() { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\n\n                if (func[proto])\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n                fBound[proto] = new fNOP();\n\n                return fBound;\n            }\n\n            /**\n             * Gets the vendor-prefixed CSS property by the given name.\n             * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\n             * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\n             * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\n             * @param propName The unprefixed CSS property name.\n             * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\n\n            cssProp : function(propName) {\n                return VENDORS._cssProperty(propName);\n            }\n            */\n        };\n\n        var MATH = Math;\n        var JQUERY = window.jQuery;\n        var EASING = (function() {\n            var _easingsMath = {\n                p : MATH.PI,\n                c : MATH.cos,\n                s : MATH.sin,\n                w : MATH.pow,\n                t : MATH.sqrt,\n                n : MATH.asin,\n                a : MATH.abs,\n                o : 1.70158\n            };\n            \n            /*\n             x : current percent (0 - 1),\n             t : current time (duration * percent),\n             b : start value (from),\n             c : end value (to),\n             d : duration\n\n             easingName : function(x, t, b, c, d) { return easedValue; }\n             */\n\n            return {\n                swing: function (x, t, b, c, d) {\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n                },\n                linear: function(x, t, b, c, d) {\n                    return x;\n                },\n                easeInQuad: function (x, t, b, c, d) {\n                    return c*(t/=d)*t + b;\n                },\n                easeOutQuad: function (x, t, b, c, d) {\n                    return -c *(t/=d)*(t-2) + b;\n                },\n                easeInOutQuad: function (x, t, b, c, d) {\n                    return ((t/=d/2) < 1) ? c/2*t*t + b : -c/2 * ((--t)*(t-2) - 1) + b;\n                },\n                easeInCubic: function (x, t, b, c, d) {\n                    return c*(t/=d)*t*t + b;\n                },\n                easeOutCubic: function (x, t, b, c, d) {\n                    return c*((t=t/d-1)*t*t + 1) + b;\n                },\n                easeInOutCubic: function (x, t, b, c, d) {\n                    return ((t/=d/2) < 1) ? c/2*t*t*t + b : c/2*((t-=2)*t*t + 2) + b;\n                },\n                easeInQuart: function (x, t, b, c, d) {\n                    return c*(t/=d)*t*t*t + b;\n                },\n                easeOutQuart: function (x, t, b, c, d) {\n                    return -c * ((t=t/d-1)*t*t*t - 1) + b;\n                },\n                easeInOutQuart: function (x, t, b, c, d) {\n                    return ((t/=d/2) < 1) ? c/2*t*t*t*t + b : -c/2 * ((t-=2)*t*t*t - 2) + b;\n                },\n                easeInQuint: function (x, t, b, c, d) {\n                    return c*(t/=d)*t*t*t*t + b;\n                },\n                easeOutQuint: function (x, t, b, c, d) {\n                    return c*((t=t/d-1)*t*t*t*t + 1) + b;\n                },\n                easeInOutQuint: function (x, t, b, c, d) {\n                    return ((t/=d/2) < 1) ? c/2*t*t*t*t*t + b : c/2*((t-=2)*t*t*t*t + 2) + b;\n                },\n                easeInSine: function (x, t, b, c, d) {\n                    return -c * _easingsMath.c(t/d * (_easingsMath.p/2)) + c + b;\n                },\n                easeOutSine: function (x, t, b, c, d) {\n                    return c * _easingsMath.s(t/d * (_easingsMath.p/2)) + b;\n                },\n                easeInOutSine: function (x, t, b, c, d) {\n                    return -c/2 * (_easingsMath.c(_easingsMath.p*t/d) - 1) + b;\n                },\n                easeInExpo: function (x, t, b, c, d) {\n                    return (t==0) ? b : c * _easingsMath.w(2, 10 * (t/d - 1)) + b;\n                },\n                easeOutExpo: function (x, t, b, c, d) {\n                    return (t==d) ? b+c : c * (-_easingsMath.w(2, -10 * t/d) + 1) + b;\n                },\n                easeInOutExpo: function (x, t, b, c, d) {\n                    if (t==0) return b;\n                    if (t==d) return b+c;\n                    if ((t/=d/2) < 1) return c/2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n                    return c/2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n                },\n                easeInCirc: function (x, t, b, c, d) {\n                    return -c * (_easingsMath.t(1 - (t/=d)*t) - 1) + b;\n                },\n                easeOutCirc: function (x, t, b, c, d) {\n                    return c * _easingsMath.t(1 - (t=t/d-1)*t) + b;\n                },\n                easeInOutCirc: function (x, t, b, c, d) {\n                    return ((t/=d/2) < 1) ? -c/2 * (_easingsMath.t(1 - t*t) - 1) + b : c/2 * (_easingsMath.t(1 - (t-=2)*t) + 1) + b;\n                },\n                easeInElastic: function (x, t, b, c, d) {\n                    var s=_easingsMath.o;var p=0;var a=c;\n                    if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;\n                    if (a < _easingsMath.a(c)) { a=c; s=p/4; }\n                    else s = p/(2*_easingsMath.p) * _easingsMath.n (c/a);\n                    return -(a*_easingsMath.w(2,10*(t-=1)) * _easingsMath.s( (t*d-s)*(2*_easingsMath.p)/p )) + b;\n                },\n                easeOutElastic: function (x, t, b, c, d) {\n                    var s=_easingsMath.o;var p=0;var a=c;\n                    if (t==0) return b;  \n                    if ((t/=d)==1) return b+c;  \n                    if (!p) p=d*.3;\n                    if (a < _easingsMath.a(c)) { a=c; s=p/4; }\n                    else s = p/(2*_easingsMath.p) * _easingsMath.n (c/a);\n                    return a*_easingsMath.w(2,-10*t) * _easingsMath.s( (t*d-s)*(2*_easingsMath.p)/p ) + c + b;\n                },\n                easeInOutElastic: function (x, t, b, c, d) {\n                    var s=_easingsMath.o;var p=0;var a=c;\n                    if (t==0) return b;  \n                    if ((t/=d/2)==2) return b+c;  \n                    if (!p) p=d*(.3*1.5);\n                    if (a < _easingsMath.a(c)) { a=c; s=p/4; }\n                    else s = p/(2*_easingsMath.p) * _easingsMath.n (c/a);\n                    if (t < 1) return -.5*(a*_easingsMath.w(2,10*(t-=1)) * _easingsMath.s( (t*d-s)*(2*_easingsMath.p)/p )) + b;\n                    return a*_easingsMath.w(2,-10*(t-=1)) * _easingsMath.s( (t*d-s)*(2*_easingsMath.p)/p )*.5 + c + b;\n                },\n                easeInBack: function (x, t, b, c, d, s) {\n                    s = s || _easingsMath.o;\n                    return c*(t/=d)*t*((s+1)*t - s) + b;\n                },\n                easeOutBack: function (x, t, b, c, d, s) {\n                    s = s || _easingsMath.o;\n                    return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\n                },\n                easeInOutBack: function (x, t, b, c, d, s) {\n                    s = s || _easingsMath.o;\n                    return ((t/=d/2) < 1) ? c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b : c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;\n                },\n                easeInBounce: function (x, t, b, c, d) {\n                    return c - this.easeOutBounce (x, d-t, 0, c, d) + b;\n                },\n                easeOutBounce: function (x, t, b, c, d) {\n                    var o = 7.5625;\n                    if ((t/=d) < (1/2.75)) {\n                        return c*(o*t*t) + b;\n                    } else if (t < (2/2.75)) {\n                        return c*(o*(t-=(1.5/2.75))*t + .75) + b;\n                    } else if (t < (2.5/2.75)) {\n                        return c*(o*(t-=(2.25/2.75))*t + .9375) + b;\n                    } else {\n                        return c*(o*(t-=(2.625/2.75))*t + .984375) + b;\n                    }\n                },\n                easeInOutBounce: function (x, t, b, c, d) {\n                    return (t < d/2) ? this.easeInBounce (x, t*2, 0, c, d) * .5 + b : this.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;\n                }\n            };\n            /*\n             *\n             * TERMS OF USE - EASING EQUATIONS\n             * \n             * Open source under the BSD License. \n             * \n             * Copyright Â© 2001 Robert Penner\n             * All rights reserved.\n             * \n             * Redistribution and use in source and binary forms, with or without modification, \n             * are permitted provided that the following conditions are met:\n             * \n             * Redistributions of source code must retain the above copyright notice, this list of \n             * conditions and the following disclaimer.\n             * Redistributions in binary form must reproduce the above copyright notice, this list \n             * of conditions and the following disclaimer in the documentation and/or other materials \n             * provided with the distribution.\n             * \n             * Neither the name of the author nor the names of contributors may be used to endorse \n             * or promote products derived from this software without specific prior written permission.\n             * \n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \n             * OF THE POSSIBILITY OF SUCH DAMAGE. \n             *\n             */\n        })();\n        var FRAMEWORK = (function() {\n            var _rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n            var _strSpace = ' ';\n            var _strEmpty = '';\n            var _strScrollLeft = 'scrollLeft';\n            var _strScrollTop = 'scrollTop';\n            var _animations = [ ];\n            var _type = COMPATIBILITY.type;\n            var _cssNumber = {\n                \"animationIterationCount\": true,\n                \"columnCount\": true,\n                \"fillOpacity\": true,\n                \"flexGrow\": true,\n                \"flexShrink\": true,\n                \"fontWeight\": true,\n                \"lineHeight\": true,\n                \"opacity\": true,\n                \"order\": true,\n                \"orphans\": true,\n                \"widows\": true,\n                \"zIndex\": true,\n                \"zoom\": true\n            };\n\n            var extend = function() {\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\n                    i = 1,\n                    length = arguments[LEXICON.l],\n                    deep = false;\n\n                // Handle a deep copy situation\n                if (_type(target) == TYPES.b) {\n                    deep = target;\n                    target = arguments[1] || {};\n                    // skip the boolean and the target\n                    i = 2;\n                }\n\n                // Handle case when target is a string or something (possible in deep copy)\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n                    target = {};\n                }\n\n                // extend jQuery itself if only one argument is passed\n                if (length === i) {\n                    target = FakejQuery;\n                    --i;\n                }\n\n                for (; i < length; i++) {\n                    // Only deal with non-null/undefined values\n                    if ((options = arguments[i]) != null) {\n                        // Extend the base object\n                        for (name in options) {\n                            src = target[name];\n                            copy = options[name];\n\n                            // Prevent never-ending loop\n                            if (target === copy) {\n                                continue;\n                            }\n\n                            // Recurse if we're merging plain objects or arrays\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                                if (copyIsArray) {\n                                    copyIsArray = false;\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\n\n                                } else {\n                                    clone = src && isPlainObject(src) ? src : {};\n                                }\n\n                                // Never move original objects, clone them\n                                target[name] = extend(deep, clone, copy);\n\n                                // Don't bring in undefined values\n                            } else if (copy !== undefined) {\n                                target[name] = copy;\n                            }\n                        }\n                    }\n                }\n\n                // Return the modified object\n                return target;\n            };\n\n            var inArray = function(item, arr, fromIndex) {\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\n                    if (arr[i] === item)\n                        return i;\n                return -1;\n            }\n            \n            var isFunction = function(obj) {\n                return _type(obj) == TYPES.f;\n            };\n\n            var isEmptyObject = function(obj) {\n                for (var name in obj )\n                    return false;\n                return true;\n            };\n\n            var isPlainObject = function(obj) {\n                if (!obj || _type(obj) != TYPES.o)\n                    return false;\n\n                var key;\n                var proto = LEXICON.p;\n                var hasOwnProperty = Object[proto].hasOwnProperty;\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n                    return false;\n                }\n\n\n                for (key in obj) { /**/ }\n\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n            };\n\n            var each = function(obj, callback) {\n                var i = 0;\n\n                if (isArrayLike(obj)) {\n                    for (; i < obj[LEXICON.l]; i++) {\n                        if (callback.call(obj[i], i, obj[i]) === false)\n                            break;\n                    }\n                }\n                else {\n                    for (i in obj) {\n                        if (callback.call(obj[i], i, obj[i]) === false)\n                            break;\n                    }\n                }\n\n                return obj;\n            };\n\n            var FakejQuery = function (selector) {\n                if(arguments[LEXICON.l] === 0)\n                    return this;\n\n                var base = new FakejQuery();\n                var elements = selector;\n                var i = 0;\n                var elms;\n                var el;\n\n                if(_type(selector) == TYPES.s) {\n                    elements = [ ];\n                    if(selector.charAt(0) === '<') {\n                        el = document.createElement('div');\n                        el.innerHTML = selector;\n                        elms = el.children;\n                    }\n                    else {\n                        elms = document.querySelectorAll(selector);\n                    }\n\n                    for(; i < elms[LEXICON.l]; i++)\n                        elements.push(elms[i]);\n                }\n\n                if(elements) {\n                    if(_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\n                        elements = [ elements ];\n\n                    for(i = 0; i < elements[LEXICON.l]; i++)\n                        base[i] = elements[i];\n\n                    base[LEXICON.l] = elements[LEXICON.l];\n                }\n\n                return base;\n            };\n\n            function isArrayLike(obj) {\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n                var t = _type(obj);\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\n            }\n\n            function stripAndCollapse(value) {\n                var tokens = value.match(_rnothtmlwhite) || [];\n                return tokens.join(_strSpace);\n            }\n\n            function matches(elem, selector) {\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n                var i = nodeList[LEXICON.l];\n\n                while (i--)\n                    if (nodeList[i] == elem)\n                        return true;\n\n                return false;\n            }\n\n            function insertAdjacentElement(el, strategy, child) {\n                if(_type(child) == TYPES.a) {\n                    for(var i = 0; i < child[LEXICON.l]; i++)\n                        insertAdjacentElement(el, strategy, child[i]);\n                }\n                else if(_type(child) == TYPES.s)\n                    el.insertAdjacentHTML(strategy, child);\n                else\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n            }\n\n            function setCSSVal(el, prop, val) {\n                try {\n                    if(el[LEXICON.s][prop] !== undefined)\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\n                } catch(e) { }\n            }\n\n            function parseCSSVal(prop, val) {\n                if(!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\n                    val += 'px';\n                return val;\n            }\n\n            function startNextAnimationInQ(animObj, removeFromQ) {\n                var index;\n                var nextAnim;\n                if(removeFromQ !== false)\n                    animObj.q.splice(0, 1);\n                if(animObj.q[LEXICON.l] > 0) {\n                    nextAnim = animObj.q[0];\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n                }\n                else {\n                    index = inArray(animObj, _animations);\n                    if(index > -1)\n                        _animations.splice(index, 1);\n                }\n            }\n\n            function setAnimationValue(el, prop, value) {\n                if(prop === _strScrollLeft || prop === _strScrollTop)\n                    el[prop] = value;\n                else\n                    setCSSVal(el, prop, value);\n            }\n\n            function animate(el, props, options, easing, complete, guaranteedNext) {\n                var hasOptions = isPlainObject(options);\n                var from = { };\n                var to = { };\n                var i = 0;\n                var key;\n                var animObj;\n                var start;\n                var progress;\n                var step;\n                var specialEasing;\n                var duration;\n                if(hasOptions) {\n                    easing = options.easing;\n                    start = options.start;\n                    progress = options.progress;\n                    step = options.step;\n                    specialEasing = options.specialEasing;\n                    complete = options.complete;\n                    duration = options.duration;\n                }\n                else\n                    duration = options;\n                specialEasing = specialEasing || { };\n                duration = duration || 400;\n                easing = easing || 'swing';\n                guaranteedNext = guaranteedNext || false;\n\n                for(; i < _animations[LEXICON.l]; i++) {\n                    if(_animations[i].el === el) {\n                        animObj = _animations[i];\n                        break;\n                    }\n                }\n\n                if(!animObj) {\n                    animObj = {\n                        el : el,\n                        q : []\n                    };\n                    _animations.push(animObj);\n                }\n\n                for (key in props) {\n                    if(key === _strScrollLeft || key === _strScrollTop)\n                        from[key] = el[key];\n                    else\n                        from[key] = FakejQuery(el).css(key);\n                }\n\n                for (key in from) {\n                    if(from[key] !== props[key] && props[key] !== undefined)\n                        to[key] = props[key];\n                }\n\n                if(!isEmptyObject(to)) {\n                    var timeNow;\n                    var end;\n                    var percent;\n                    var fromVal;\n                    var toVal;\n                    var easedVal;\n                    var timeStart;\n                    var frame;\n                    var elapsed;\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n                    var qObj = {\n                        props : to,\n                        duration : hasOptions ? options : duration,\n                        easing : easing,\n                        complete : complete\n                    };\n                    if (qPos === -1) {\n                        qPos = animObj.q[LEXICON.l];\n                        animObj.q.push(qObj);\n                    }\n\n                    if(qPos === 0) {\n                        if(duration > 0) {\n                            timeStart = COMPATIBILITY.now();\n                            frame = function() {\n                                timeNow = COMPATIBILITY.now();\n                                elapsed = (timeNow - timeStart);\n                                end = qObj.stop || elapsed >= duration;\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\n\n                                for(key in to) {\n                                    fromVal = parseFloat(from[key]);\n                                    toVal = parseFloat(to[key]);\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                                    setAnimationValue(el, key, easedVal);\n                                    if(isFunction(step)) {\n                                        step(easedVal, {\n                                            elem : el,\n                                            prop : key,\n                                            start : fromVal,\n                                            now : easedVal,\n                                            end : toVal,\n                                            pos : percent,\n                                            options : {\n                                                easing : easing,\n                                                speacialEasing : specialEasing,\n                                                duration : duration,\n                                                complete : complete,\n                                                step : step\n                                            },\n                                            startTime : timeStart\n                                        });\n                                    }\n                                }\n\n                                if(isFunction(progress))\n                                    progress({ }, percent, MATH.max(0, duration - elapsed));\n\n                                if (end) {\n                                    startNextAnimationInQ(animObj);\n                                    if(isFunction(complete))\n                                        complete();\n                                }\n                                else\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\n                            };\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\n                        }\n                        else {\n                            for(key in to)\n                                setAnimationValue(el, key, to[key]);\n                            startNextAnimationInQ(animObj);\n                        }\n                    }\n                }\n                else if(guaranteedNext)\n                    startNextAnimationInQ(animObj);\n            }\n\n            function stop(el, clearQ, jumpToEnd) {\n                var animObj;\n                var qObj;\n                var key;\n                var i = 0;\n                for(; i < _animations[LEXICON.l]; i++) {\n                    animObj = _animations[i];\n                    if(animObj.el === el) {\n                        if(animObj.q[LEXICON.l] > 0) {\n                            qObj = animObj.q[0];\n                            qObj.stop = true;\n                            COMPATIBILITY.cAF()(qObj.frame);\n                            animObj.q.splice(0, 1);\n\n                            if(jumpToEnd)\n                                for(key in qObj.props)\n                                    setAnimationValue(el, key, qObj.props[key]);\n\n                            if(clearQ)\n                                animObj.q = [ ];\n                            else\n                                startNextAnimationInQ(animObj, false);\n                        }\n                        break;\n                    }\n                }\n            }\n\n            FakejQuery[LEXICON.p] = {\n\n                //EVENTS:\n\n                on : function(eventName, handler) {\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n\n                    var eventNameLength = eventName[LEXICON.l];\n                    var i = 0;\n                    var el;\n                    return this.each(function() {\n                        el = this;\n                        try {\n                            if (el.addEventListener) {\n                                for (; i < eventNameLength; i++)\n                                    el.addEventListener(eventName[i], handler);\n                            }\n                            else if(el.detachEvent) {\n                                for (; i < eventNameLength; i++)\n                                    el.attachEvent('on' + eventName[i], handler);\n                            }\n                        } catch (e) { }\n                    });\n                },\n\n                off : function(eventName, handler) {\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n\n                    var eventNameLength = eventName[LEXICON.l];\n                    var i = 0;\n                    var el;\n                    return this.each(function() {\n                        el = this;\n                        try {\n                            if (el.removeEventListener) {\n                                for (; i < eventNameLength; i++)\n                                    el.removeEventListener(eventName[i], handler);\n                            }\n                            else if(el.detachEvent) {\n                                for (; i < eventNameLength; i++)\n                                    el.detachEvent('on' + eventName[i], handler);\n                            }\n                        } catch (e) { }\n                    });\n                },\n\n                one : function (eventName, handler) {\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n                    return this.each(function() {\n                        var el = FakejQuery(this);\n                        FakejQuery.each(eventName, function(i, oneEventName) {\n                            var oneHandler = function(e) {\n                                handler.call(this, e);\n                                el.off(oneEventName, oneHandler);\n                            };\n                            el.on(oneEventName, oneHandler);\n                        });\n                    });\n                },\n\n                trigger : function(eventName) {\n                    var el;\n                    var event;\n                    return this.each(function() {\n                        el = this;\n                        if (document.createEvent) {\n                            event = document.createEvent('HTMLEvents');\n                            event.initEvent(eventName, true, false);\n                            el.dispatchEvent(event);\n                        }\n                        else {\n                            el.fireEvent(\"on\" + eventName);\n                        }\n                    });\n                },\n\n                //DOM NODE INSERTING / REMOVING:\n\n                append : function(child) {\n                    return this.each(function() { insertAdjacentElement(this, 'beforeend', child); });\n                },\n\n                prepend : function(child) {\n                    return this.each(function() { insertAdjacentElement(this, 'afterbegin', child); });\n                },\n\n                before : function(child) {\n                    return this.each(function() { insertAdjacentElement(this, 'beforebegin', child); });\n                },\n\n                after : function(child) {\n                    return this.each(function() { insertAdjacentElement(this, 'afterend', child); });\n                },\n\n                remove : function() {\n                    return this.each(function() {\n                        var el = this;\n                        var parentNode = el.parentNode;\n                        if(parentNode != null)\n                            parentNode.removeChild(el);\n                    });\n                },\n\n                unwrap : function() {\n                    var parents = [ ];\n                    var i;\n                    var el;\n                    var parent;\n\n                    this.each(function() {\n                        parent = this.parentNode;\n                        if(inArray(parent, parents) === - 1)\n                            parents.push(parent);\n                    });\n\n                    for(i = 0; i < parents[LEXICON.l]; i++) {\n                        el = parents[i];\n                        parent = el.parentNode;\n                        while (el.firstChild)\n                            parent.insertBefore(el.firstChild, el);\n                        parent.removeChild(el);\n                    }\n\n                    return this;\n                },\n\n                wrapAll : function(wrapperHTML) {\n                    var i;\n                    var nodes = this;\n                    var wrapper = FakejQuery(wrapperHTML)[0];\n                    var deepest = wrapper;\n                    var parent = nodes[0].parentNode;\n                    var previousSibling = nodes[0].previousSibling;\n                    while(deepest.childNodes[LEXICON.l] > 0)\n                        deepest = deepest.childNodes[0];\n\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\n                        deepest.appendChild(nodes[i]);\n\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n                    parent.insertBefore(wrapper, nextSibling);\n\n                    return this;\n                },\n\n                wrapInner : function(wrapperHTML) {\n                    return this.each(function() {\n                        var el = FakejQuery(this);\n                        var contents = el.contents();\n\n                        if (contents[LEXICON.l])\n                            contents.wrapAll(wrapperHTML);\n                        else\n                            el.append(wrapperHTML);\n                    });\n                },\n\n                wrap : function(wrapperHTML) {\n                    return this.each(function() { FakejQuery(this).wrapAll(wrapperHTML); });\n                },\n\n\n                //DOM NODE MANIPULATION / INFORMATION:\n\n                css : function(styles, val) {\n                    var el;\n                    var key;\n                    var cptStyle;\n                    var getCptStyle = window.getComputedStyle;\n                    if(_type(styles) == TYPES.s) {\n                        if(val === undefined) {\n                            el = this[0];\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\n\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n                        }\n                        else {\n                            return this.each(function() {\n                                setCSSVal(this, styles, val);\n                            });\n                        }\n                    }\n                    else {\n                        return this.each(function() {\n                            for(key in styles)\n                                setCSSVal(this, key, styles[key]);\n                        });\n                    }\n                },\n\n                hasClass : function(className) {\n                    var elem, i = 0;\n                    var classNamePrepared = _strSpace + className + _strSpace;\n                    var classList;\n\n                    while ((elem = this[ i++ ])) {\n                        classList = elem.classList;\n                        if(classList && classList.contains(className))\n                            return true;\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\n                            return true;\n                    }\n\n                    return false;\n                },\n\n                addClass : function(className) {\n                    var classes;\n                    var elem;\n                    var cur;\n                    var curValue;\n                    var clazz;\n                    var finalValue;\n                    var supportClassList;\n                    var elmClassList;\n                    var i = 0;\n                    var v = 0;\n\n                    if (className) {\n                        classes = className.match( _rnothtmlwhite ) || [];\n\n                        while ((elem = this[i++])) {\n                            elmClassList = elem.classList;\n                            if(supportClassList === undefined)\n                                supportClassList = elmClassList !== undefined;\n\n                            if(supportClassList) {\n                                while ((clazz = classes[v++]))\n                                    elmClassList.add(clazz);\n                            }\n                            else {\n                                curValue = elem.className + _strEmpty;\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\n\n                                if (cur) {\n                                    while ((clazz = classes[v++]))\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\n                                            cur += clazz + _strSpace;\n\n                                    finalValue = stripAndCollapse(cur);\n                                    if (curValue !== finalValue)\n                                        elem.className = finalValue;\n                                }\n                            }\n                        }\n                    }\n\n                    return this;\n                },\n\n                removeClass : function(className) {\n                    var classes;\n                    var elem;\n                    var cur;\n                    var curValue;\n                    var clazz;\n                    var finalValue;\n                    var supportClassList;\n                    var elmClassList;\n                    var i = 0;\n                    var v = 0;\n\n                    if (className) {\n                        classes = className.match(_rnothtmlwhite) || [];\n\n                        while ((elem = this[i++])) {\n                            elmClassList = elem.classList;\n                            if(supportClassList === undefined)\n                                supportClassList = elmClassList !== undefined;\n\n                            if(supportClassList) {\n                                while ((clazz = classes[v++]))\n                                    elmClassList.remove(clazz);\n                            }\n                            else {\n                                curValue = elem.className + _strEmpty;\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\n\n                                if (cur) {\n                                    while ((clazz = classes[v++]))\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n\n                                    finalValue = stripAndCollapse(cur);\n                                    if (curValue !== finalValue)\n                                        elem.className = finalValue;\n                                }\n                            }\n                        }\n                    }\n\n                    return this;\n                },\n\n                hide : function() {\n                    return this.each(function() { this[LEXICON.s].display = 'none'; });\n                },\n\n                show : function() {\n                    return this.each(function() { this[LEXICON.s].display = 'block'; });\n                },\n\n                attr : function(attrName, value) {\n                    var i = 0;\n                    var el;\n                    while (el = this[i++]) {\n                        if(value === undefined)\n                            return el.getAttribute(attrName);\n                        el.setAttribute(attrName, value);\n                    }\n                    return this;\n                },\n\n                removeAttr : function(attrName) {\n                    return this.each(function() { this.removeAttribute(attrName); });\n                },\n\n                offset : function() {\n                    var el = this[0];\n                    var rect = el.getBoundingClientRect();\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n                    return {\n                        top: rect.top + scrollTop,\n                        left: rect.left + scrollLeft\n                    };\n                },\n\n                position : function() {\n                    var el = this[0];\n                    return {\n                        top: el.offsetTop,\n                        left: el.offsetLeft\n                    };\n                },\n\n                scrollLeft : function(value) {\n                    var i = 0;\n                    var el;\n                    while (el = this[i++]) {\n                        if(value === undefined)\n                            return el[_strScrollLeft];\n                        el[_strScrollLeft] = value;\n                    }\n                    return this;\n                },\n\n                scrollTop : function(value) {\n                    var i = 0;\n                    var el;\n                    while (el = this[i++]) {\n                        if(value === undefined)\n                            return el[_strScrollTop];\n                        el[_strScrollTop] = value;\n                    }\n                    return this;\n                },\n\n                val : function(value) {\n                    var el = this[0];\n                    if(!value)\n                        return el.value;\n                    el.value = value;\n                    return this;\n                },\n\n\n                //DOM TRAVERSAL / FILTERING:\n\n                first : function() {\n                    return this.eq(0);\n                },\n\n                last : function() {\n                    return this.eq(-1);\n                },\n\n                eq : function(index) {\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n                },\n\n                find : function(selector) {\n                    var children = [ ];\n                    var i;\n                    this.each(function() {\n                        var el = this;\n                        var ch = el.querySelectorAll(selector);\n                        for(i = 0; i < ch[LEXICON.l]; i++)\n                            children.push(ch[i]);\n                    });\n                    return FakejQuery(children);\n                },\n\n                children : function(selector) {\n                    var children = [ ];\n                    var el;\n                    var ch;\n                    var i;\n\n                    this.each(function() {\n                        ch = this.children;\n                        for(i = 0; i < ch[LEXICON.l]; i++) {\n                            el = ch[i];\n                            if(selector) {\n                                if((el.matches && el.matches(selector)) || matches(el, selector))\n                                    children.push(el);\n                            }\n                            else\n                                children.push(el);\n                        }\n                    });\n                    return FakejQuery(children);\n                },\n\n                parent : function(selector) {\n                    var parents = [ ];\n                    var parent;\n                    this.each(function() {\n                        parent = this.parentNode;\n                        if(selector ? FakejQuery(parent).is(selector) : true)\n                            parents.push(parent);\n                    });\n                    return FakejQuery(parents);\n                },\n\n                is : function(selector) {\n                    var el;\n                    var i;\n                    for(i = 0; i < this[LEXICON.l]; i++) {\n                        el = this[i];\n                        if(selector === \":visible\")\n                            return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n                        if(selector === \":hidden\")\n                            return !!!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n                        if((el.matches && el.matches(selector)) || matches(el, selector))\n                            return true;\n                    }\n                    return false;\n                },\n\n                contents : function() {\n                    var contents = [ ];\n                    var childs;\n                    var i;\n\n                    this.each(function() {\n                        childs = this.childNodes;\n                        for(i = 0; i < childs[LEXICON.l]; i++)\n                            contents.push(childs[i]);\n                    });\n\n                    return FakejQuery(contents);\n                },\n\n                each : function(callback) {\n                    return each(this, callback);\n                },\n\n\n                //ANIMATION:\n\n                animate : function(props, duration, easing, complete) {\n                    return this.each(function() { animate(this, props, duration, easing, complete); });\n                },\n\n                stop : function(clearQ, jump) {\n                    return this.each(function() { stop(this, clearQ, jump); });\n                }\n            };\n\n            extend(FakejQuery, {\n                extend : extend,\n                inArray : inArray,\n                isEmptyObject : isEmptyObject,\n                isPlainObject : isPlainObject,\n                each : each\n            });\n\n            return FakejQuery;\n        })();\n        var INSTANCES = (function() {\n            var _targets = [ ];\n            var _instancePropertyString = '__overlayScrollbars__';\n\n            /**\n             * Register, unregister or get a certain (or all) instances.\n             * Register: Pass the target and the instance.\n             * Unregister: Pass the target and null.\n             * Get Instance: Pass the target from which the instance shall be got.\n             * Get Targets: Pass no arguments.\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\n             * @param instance The instance.\n             * @returns {*|void} Returns the instance from the given target.\n             */\n            return function (target, instance) {\n                var argLen = arguments[LEXICON.l];\n                if(argLen < 1) {\n                    //return all targets\n                    return _targets;\n                }\n                else {\n                    if(instance) {\n                        //register instance\n                        target[_instancePropertyString] = instance;\n                        _targets.push(target);\n                    }\n                    else {\n                        var index = COMPATIBILITY.inA(target, _targets);\n                        if (index > -1) {\n                            if(argLen > 1) {\n                                //unregister instance\n                                delete target[_instancePropertyString];\n                                _targets.splice(index, 1);\n                            }\n                            else {\n                                //get instance from target\n                                return _targets[index][_instancePropertyString];\n                            }\n                        }\n                    }\n                }\n            }\n        })();\n        var PLUGIN = (function() {\n            var _plugin;\n            var _pluginsGlobals;\n            var _pluginsAutoUpdateLoop;\n            var _pluginsExtensions = [ ];\n            var _pluginsOptions = (function() {\n                var type = COMPATIBILITY.type;\n                var possibleTemplateTypes = [\n                    TYPES.b, //boolean\n                    TYPES.n, //number\n                    TYPES.s, //string\n                    TYPES.a, //array\n                    TYPES.o, //object\n                    TYPES.f, //function\n                    TYPES.z  //null\n                ];\n                var restrictedStringsSplit = ' ';\n                var restrictedStringsPossibilitiesSplit = ':';\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\n                var numberAllowedValues = TYPES.n;\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n                var booleanTrueTemplate = [true, TYPES.b];\n                var booleanFalseTemplate = [false, TYPES.b];\n                var callbackTemplate = [null,  [TYPES.z, TYPES.f]];\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n                var optionsDefaultsAndTemplate = {\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\n                    clipAlways: booleanTrueTemplate,                                     //true || false\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\n                    nativeScrollbarsOverlaid: {\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\n                        initialize: booleanTrueTemplate                                  //true || false\n                    },\n                    overflowBehavior: {\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n                    },\n                    scrollbars: {\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\n                        autoHideDelay: [800, numberAllowedValues],                       //number\n                        dragScrolling: booleanTrueTemplate,                              //true || false\n                        clickScrolling: booleanFalseTemplate,                            //true || false\n                        touchSupport: booleanTrueTemplate,                               //true || false\n                        snapHandle: booleanFalseTemplate                                 //true || false\n                    },\n                    textarea: {\n                        dynWidth: booleanFalseTemplate,                                  //true || false\n                        dynHeight: booleanFalseTemplate,                                 //true || false\n                        inheritedAttrs : inheritedAttrsTemplate                          //string || array || null\n                    },\n                    callbacks: {\n                        onInitialized: callbackTemplate,                                 //null || function\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\n                        onDestroyed: callbackTemplate,                                   //null || function\n                        onScrollStart: callbackTemplate,                                 //null || function\n                        onScroll: callbackTemplate,                                      //null || function\n                        onScrollStop: callbackTemplate,                                  //null || function\n                        onOverflowChanged: callbackTemplate,                             //null || function\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\n                        onDirectionChanged: callbackTemplate,                            //null || function\n                        onContentSizeChanged: callbackTemplate,                          //null || function\n                        onHostSizeChanged: callbackTemplate,                             //null || function\n                        onUpdated: callbackTemplate                                      //null || function\n                    }\n                };\n                var convert = function(template) {\n                    var recursive = function(obj) {\n                        var key;\n                        var val;\n                        var valType;\n                        for(key in obj) {\n                            if(!obj[LEXICON.hOP](key))\n                                continue;\n                            val = obj[key];\n                            valType = type(val);\n                            if(valType == TYPES.a)\n                                obj[key] = val[template ? 1 : 0];\n                            else if(valType == TYPES.o)\n                                obj[key] = recursive(val);\n                        }\n                        return obj;\n                    };\n                    return recursive(FRAMEWORK.extend(true, { }, optionsDefaultsAndTemplate));\n                };\n\n                return {\n                    _defaults : convert(),\n\n                    _template : convert(true),\n\n                    /**\n                     * Validates the passed object by the passed template.\n                     * @param obj The object which shall be validated.\n                     * @param template The template which defines the allowed values and types.\n                     * @param writeErrors True if errors shall be logged to the console.\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\n                     */\n                    _validate : function (obj, template, writeErrors, diffObj) {\n                        var validatedOptions = { };\n                        var validatedOptionsPrepared = { };\n                        var objectCopy = FRAMEWORK.extend(true, { }, obj);\n                        var inArray = FRAMEWORK.inArray;\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\n                        var checkObjectProps = function(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n                            for (var prop in template) {\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                                    var isValid = false;\n                                    var isDiff = false;\n                                    var templateValue = template[prop];\n                                    var templateValueType = type(templateValue);\n                                    var templateIsComplex = templateValueType == TYPES.o;\n                                    var templateTypes = type(templateValue) != TYPES.a ? [ templateValue ] : templateValue;\n                                    var dataDiffValue = diffData[prop];\n                                    var dataValue = data[prop];\n                                    var dataValueType = type(dataValue);\n                                    var propPrefix = prevPropName ? prevPropName + \".\" : \"\";\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                                    var errorPossibleTypes = [ ];\n                                    var errorRestrictedStrings = [ ];\n                                    var restrictedStringValuesSplit;\n                                    var restrictedStringValuesPossibilitiesSplit;\n                                    var isRestrictedValue;\n                                    var mainPossibility;\n                                    var currType;\n                                    var i;\n                                    var v;\n                                    var j;\n\n                                    dataDiffValue = dataDiffValue === undefined ? { } : dataDiffValue;\n                                    \n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\n                                    if(templateIsComplex && dataValueType == TYPES.o) {\n                                        validatedOptions[prop] = { };\n                                        validatedOptionsPrepared[prop] = { };\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                                        FRAMEWORK.each([ data, validatedOptions, validatedOptionsPrepared ], function(index, value) {\n                                            if(isEmptyObj(value[prop])) {\n                                                delete value[prop];\n                                            }\n                                        });\n                                    }\n                                    else if(!templateIsComplex) {\n                                        for(i = 0; i < templateTypes[LEXICON.l]; i++) {\n                                            currType = templateTypes[i];\n                                            templateValueType = type(currType);\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n                                            if(isRestrictedValue) {\n                                                errorPossibleTypes.push(TYPES.s);\n\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n                                                for(v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n                                                    for(j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                                                        //if any possibility matches with the dataValue, its valid\n                                                        if(dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                                                            isValid = true;\n                                                            break;\n                                                        }\n                                                    }\n                                                    if(isValid)\n                                                        break;\n                                                }\n                                            }\n                                            else {\n                                                errorPossibleTypes.push(currType);\n\n                                                if(dataValueType === currType) {\n                                                    isValid = true;\n                                                    break;\n                                                }\n                                            }\n                                        }\n\n                                        if(isValid) {\n                                            isDiff = dataValue !== dataDiffValue;\n                                            \n                                            if(isDiff)\n                                                validatedOptions[prop] = dataValue;\n                                            \n                                            if(isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                                        }\n                                        else if(writeErrors) {\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(\", \").toUpperCase() + \" ].\" +\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(\", \").split(restrictedStringsPossibilitiesSplit).join(\", \") + \" ].\" : \"\"));\n                                        }\n                                        delete data[prop];\n                                    }\n                                }\n                            }\n                        };\n                        checkObjectProps(objectCopy, template, diffObj || { }, validatedOptions, validatedOptionsPrepared);\n\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n                        /*\n                        if(keepForeignProps) {\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\n                        }\n                        */\n                        \n                        if(!isEmptyObj(objectCopy) && writeErrors)\n                            console.warn(\"The following options are discarded due to invalidity:\\r\\n\" + window.JSON.stringify(objectCopy, null, 2));\n\n                        return {\n                            _default : validatedOptions,\n                            _prepared : validatedOptionsPrepared\n                        };\n                    }\n                }\n            }());\n\n            /**\n             * Initializes the object which contains global information about the plugin and each instance of it.\n             */\n            function initOverlayScrollbarsStatics() {\n                if(!_pluginsGlobals)\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n                if(!_pluginsAutoUpdateLoop)\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n            }\n\n            /**\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\n             * @param defaultOptions\n             * @constructor\n             */\n            function OverlayScrollbarsGlobals(defaultOptions) {\n                var _base = this;\n                var strOverflow = 'overflow';\n                var strHidden = 'hidden';\n                var strScroll = 'scroll';\n                var bodyElement = FRAMEWORK('body');\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n\n                bodyElement.append(scrollbarDummyElement);\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n                var nativeScrollbarIsOverlaid = {\n                    x: nativeScrollbarSize.x === 0,\n                    y: nativeScrollbarSize.y === 0\n                };\n\n                FRAMEWORK.extend(_base, {\n                    defaultOptions : defaultOptions,\n                    autoUpdateLoop : false,\n                    autoUpdateRecommended : !COMPATIBILITY.mO(),\n                    nativeScrollbarSize : nativeScrollbarSize,\n                    nativeScrollbarIsOverlaid : nativeScrollbarIsOverlaid,\n                    nativeScrollbarStyling : (function() {\n                        var result = false;\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n                        try {\n                            result = scrollbarDummyElement.css('scrollbar-width') === 'none' || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n                        } catch (ex) { }\n                        \n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n                        //and set overflow to scroll\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n                        \n                        return result;\n                    })(),\n                    overlayScrollbarDummySize : { x: 30, y: 30 },\n                    msie : (function() {\n                        var ua = window.navigator.userAgent;\n                        var strIndexOf = 'indexOf';\n                        var strSubString = 'substring';\n                        var msie = ua[strIndexOf]('MSIE ');\n                        var trident = ua[strIndexOf]('Trident/');\n                        var edge = ua[strIndexOf]('Edge/');\n                        var rv = ua[strIndexOf]('rv:');\n                        var result;\n                        var parseIntFunc = parseInt;\n\n                        // IE 10 or older => return version number\n                        if (msie > 0)\n                            result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\n\n                        // IE 11 => return version number\n                        else if (trident > 0)\n                            result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\n\n                        // Edge (IE 12+) => return version number\n                        else if (edge > 0)\n                            result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\n\n                        // other browser\n                        return result;\n                    })(),\n                    cssCalc : (function() {\n                        var dummyStyle = document.createElement('div')[LEXICON.s];\n                        var strCalc = 'calc';\n                        var i = -1;\n                        var prop;\n\n                        for(; i < VENDORS._cssPrefixes[LEXICON.l]; i++) {\n                            prop = i < 0 ? strCalc : VENDORS._cssPrefixes[i] + strCalc;\n                            dummyStyle.cssText = 'width:' + prop + '(1px);';\n                            if (dummyStyle[LEXICON.l])\n                                return prop;\n                        }\n                        return null;\n                    })(),\n                    restrictedMeasuring : (function() {\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n                        scrollbarDummyElement.css(strOverflow, strHidden);\n                        var scrollSize = {\n                            w : scrollbarDummyElement0[LEXICON.sW],\n                            h : scrollbarDummyElement0[LEXICON.sH]\n                        };\n                        scrollbarDummyElement.css(strOverflow, 'visible');\n                        var scrollSize2 = {\n                            w : scrollbarDummyElement0[LEXICON.sW],\n                            h : scrollbarDummyElement0[LEXICON.sH]\n                        };\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\n                    })(),\n                    rtlScrollBehavior : (function() {\n                        scrollbarDummyElement.css({ 'overflow-y' : strHidden, 'overflow-x' : strScroll, 'direction' : 'rtl' }).scrollLeft(0);\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\n                        scrollbarDummyElement.scrollLeft(999);\n                        var dummyContainerScrollOffsetAfterScroll = dummyContainerChild.offset();\n                        return {\n                            //origin direction = determines if the zero scroll position is on the left or right side\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n                            //true = on the left side\n                            //false = on the right side\n                            i : dummyContainerOffset.left === dummyContainerChildOffset.left,\n                            //negative = determines if the maximum scroll is positive or negative\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n                            //true = negative\n                            //false = positive\n                            n : dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left === 0\n                        };\n                    })(),\n                    supportTransform : VENDORS._cssProperty('transform') !== null,\n                    supportTransition : VENDORS._cssProperty('transition') !== null,\n                    supportPassiveEvents : (function() {\n                        var supportsPassive = false;\n                        try {\n                            window.addEventListener('test', null, Object.defineProperty({ }, 'passive', {\n                                get: function() {\n                                    supportsPassive = true;\n                                }\n                            }));\n                        } catch (e) { }\n                        return supportsPassive;\n                    })(),\n                    supportResizeObserver : !!COMPATIBILITY.rO(),\n                    supportMutationObserver : !!COMPATIBILITY.mO()\n                });\n\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\n\n                //Catch zoom event:\n                (function () {\n                    if(nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\n                        return;\n\n                    var abs = MATH.abs;\n                    var windowWidth = COMPATIBILITY.wW();\n                    var windowHeight = COMPATIBILITY.wH();\n                    var windowDpr = getWindowDPR();\n                    var onResize = function() {\n                        if(INSTANCES().length > 0) {\n                            var newW = COMPATIBILITY.wW();\n                            var newH = COMPATIBILITY.wH();\n                            var deltaW = newW - windowWidth;\n                            var deltaH = newH - windowHeight;\n\n                            if (deltaW === 0 && deltaH === 0)\n                                return;\n\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n                            var absDeltaW = abs(deltaW);\n                            var absDeltaH = abs(deltaH);\n                            var absDeltaWRatio = abs(deltaWRatio);\n                            var absDeltaHRatio = abs(deltaHRatio);\n                            var newDPR = getWindowDPR();\n\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n                            var isZoom = deltaIsBigger && difference && dprChanged;\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\n                            var newScrollbarSize;\n\n                            if (isZoom) {\n                                bodyElement.append(scrollbarDummyElement);\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                                scrollbarDummyElement.remove();\n                                if(oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                                    FRAMEWORK.each(INSTANCES(), function () {\n                                        if(INSTANCES(this))\n                                            INSTANCES(this).update('zoom');\n                                    });\n                                }\n                            }\n\n                            windowWidth = newW;\n                            windowHeight = newH;\n                            windowDpr = newDPR;\n                        }\n                    };\n\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\n                        var absValOne = abs(valOne);\n                        var absValTwo = abs(valTwo);\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n                    }\n\n                    function getWindowDPR() {\n                        var dDPI = window.screen.deviceXDPI || 0;\n                        var sDPI = window.screen.logicalXDPI || 1;\n                        return window.devicePixelRatio || (dDPI / sDPI);\n                    }\n\n                    FRAMEWORK(window).on('resize', onResize);\n                })();\n\n                function calcNativeScrollbarSize(measureElement) {\n                    return {\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n                    };\n                }\n            }\n\n            /**\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\n             * @constructor\n             */\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\n                var _base = this;\n                var _inArray = FRAMEWORK.inArray;\n                var _getNow = COMPATIBILITY.now;\n                var _strAutoUpdate = 'autoUpdate';\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n                var _strLength = LEXICON.l;\n                var _loopingInstances = [ ];\n                var _loopingInstancesIntervalCache = [ ];\n                var _loopIsActive = false;\n                var _loopIntervalDefault = 33;\n                var _loopInterval = _loopIntervalDefault;\n                var _loopTimeOld = _getNow();\n                var _loopID;\n                \n\n                /**\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\n                 */\n                var loop = function() {\n                    if(_loopingInstances[_strLength] > 0 && _loopIsActive) {\n                        _loopID = COMPATIBILITY.rAF()(function () {\n                            loop();\n                        });\n                        var timeNew = _getNow();\n                        var timeDelta = timeNew - _loopTimeOld;\n                        var lowestInterval;\n                        var instance;\n                        var instanceOptions;\n                        var instanceAutoUpdateAllowed;\n                        var instanceAutoUpdateInterval;\n                        var now;\n\n                        if (timeDelta > _loopInterval) {\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\n                            lowestInterval = _loopIntervalDefault;\n                            for(var i = 0; i < _loopingInstances[_strLength]; i++) {\n                                instance = _loopingInstances[i];\n                                if (instance !== undefined) {\n                                    instanceOptions = instance.options();\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                                    now = _getNow();\n\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\n                                        instance.update('auto');\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                                    }\n\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                                }\n                            }\n                            _loopInterval = lowestInterval;\n                        }\n                    } else {\n                        _loopInterval = _loopIntervalDefault;\n                    }\n                };\n\n                /**\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\n                 * @param instance The instance which shall be updated in a loop automatically.\n                 */\n                _base.add = function(instance) {\n                    if(_inArray(instance, _loopingInstances) === -1) {\n                        _loopingInstances.push(instance);\n                        _loopingInstancesIntervalCache.push(_getNow());\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n                            _loopIsActive = true;\n                            globals.autoUpdateLoop = _loopIsActive;\n                            loop();\n                        }\n                    }\n                };\n\n                /**\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\n                 * @param instance The instance which shall be updated in a loop automatically.\n                 */\n                _base.remove = function(instance) {\n                    var index = _inArray(instance, _loopingInstances);\n                    if(index > -1) {\n                        //remove from loopingInstances list\n                        _loopingInstancesIntervalCache.splice(index, 1);\n                        _loopingInstances.splice(index, 1);\n\n                        //correct update loop behavior\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n                            _loopIsActive = false;\n                            globals.autoUpdateLoop = _loopIsActive;\n                            if(_loopID !== undefined) {\n                                COMPATIBILITY.cAF()(_loopID);\n                                _loopID = -1;\n                            }\n                        }\n                    }\n                };\n            }\n\n            /**\n             * A object which manages the scrollbars visibility of the target element.\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\n             * @param options The custom options.\n             * @param extensions The custom extensions.\n             * @param globals\n             * @param autoUpdateLoop\n             * @returns {*}\n             * @constructor\n             */\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n                //shortcuts\n                var type = COMPATIBILITY.type;\n                var inArray = FRAMEWORK.inArray;\n                var each = FRAMEWORK.each;\n                \n                //make correct instanceof\n                var _base = new _plugin();\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\n                \n                //if passed element is no HTML element: skip and return\n                if(!isHTMLElement(pluginTargetElement))\n                    return;\n                \n                //if passed element is already initialized: set passed options if there are any and return its instance\n                if(INSTANCES(pluginTargetElement)) {\n                    var inst = INSTANCES(pluginTargetElement);\n                    inst.options(options);\n                    return inst;\n                }\n\n                //globals:\n                var _nativeScrollbarIsOverlaid;\n                var _overlayScrollbarDummySize;\n                var _rtlScrollBehavior;\n                var _autoUpdateRecommended;\n                var _msieVersion;\n                var _nativeScrollbarStyling;\n                var _cssCalc;\n                var _nativeScrollbarSize;\n                var _supportTransition;\n                var _supportTransform;\n                var _supportPassiveEvents;\n                var _supportResizeObserver;\n                var _supportMutationObserver;\n                var _restrictedMeasuring;\n\n                //general readonly:\n                var _initialized;\n                var _destroyed;\n                var _isTextarea;\n                var _isBody;\n                var _documentMixed;\n                var _isTextareaHostGenerated;\n\n                //general:\n                var _isBorderBox;\n                var _sizeAutoObserverAdded;\n                var _paddingX;\n                var _paddingY;\n                var _borderX;\n                var _borderY;\n                var _marginX;\n                var _marginY;\n                var _isRTL;\n                var _sleeping;\n                var _contentBorderSize = { };\n                var _scrollHorizontalInfo = { };\n                var _scrollVerticalInfo = { };\n                var _viewportSize = { };\n                var _nativeScrollbarMinSize = { };\n\n                //naming:\n                var _strMinusHidden = '-hidden';\n                var _strMarginMinus = 'margin-';\n                var _strPaddingMinus = 'padding-';\n                var _strBorderMinus = 'border-';\n                var _strTop = 'top';\n                var _strRight = 'right';\n                var _strBottom = 'bottom';\n                var _strLeft = 'left';\n                var _strMinMinus = 'min-';\n                var _strMaxMinus = 'max-';\n                var _strWidth = 'width';\n                var _strHeight = 'height';\n                var _strFloat = 'float';\n                var _strEmpty = '';\n                var _strAuto = 'auto';\n                var _strSync = 'sync';\n                var _strScroll = 'scroll';\n                var _strHundredPercent = '100%';\n                var _strX = 'x';\n                var _strY = 'y';\n                var _strDot = '.';\n                var _strSpace = ' ';\n                var _strScrollbar = 'scrollbar';\n                var _strMinusHorizontal = '-horizontal';\n                var _strMinusVertical = '-vertical';\n                var _strScrollLeft = _strScroll + 'Left';\n                var _strScrollTop = _strScroll + 'Top';\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\n                var _strMouseTouchEnter = 'mouseenter';\n                var _strMouseTouchLeave = 'mouseleave';\n                var _strKeyDownEvent = 'keydown';\n                var _strKeyUpEvent = 'keyup';\n                var _strSelectStartEvent = 'selectstart';\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\n\n                //class names:\n                var _cassNamesPrefix = 'os-';\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\n                var _classNameHostElement = _cassNamesPrefix + 'host';\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n                var _classNameHostTransition = _classNameHostElement + '-transition';\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n                var _classNameContentElement = _cassNamesPrefix + 'content';\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n                //callbacks:\n                var _callbacksInitQeueue = [ ];\n\n                //options:\n                var _defaultOptions;\n                var _currentOptions;\n                var _currentPreparedOptions;\n\n                //extensions:\n                var _extensions = { };\n                var _extensionsPrivateMethods = 'added removed on contract';\n\n                //update\n                var _lastUpdateTime;\n                var _swallowedUpdateHints = { };\n                var _swallowedUpdateTimeout;\n                var _swallowUpdateLag = 42;\n                var _imgs = [ ];\n\n                //DOM elements:\n                var _windowElement;\n                var _documentElement;\n                var _htmlElement;\n                var _bodyElement;\n                var _targetElement;                     //the target element of this OverlayScrollbars object\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\n                var _sizeAutoObserverElement;           //observes size auto changes\n                var _sizeObserverElement;               //observes size and padding changes\n                var _paddingElement;                    //manages the padding\n                var _viewportElement;                   //is the viewport of our scrollbar model\n                var _contentElement;                    //the element which holds the content\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\n                var _contentGlueElement;                //has always the size of the content element\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\n                var _scrollbarCornerElement;\n                var _scrollbarHorizontalElement;\n                var _scrollbarHorizontalTrackElement;\n                var _scrollbarHorizontalHandleElement;\n                var _scrollbarVerticalElement;\n                var _scrollbarVerticalTrackElement;\n                var _scrollbarVerticalHandleElement;\n                var _windowElementNative;\n                var _documentElementNative;\n                var _targetElementNative;\n                var _hostElementNative;\n                var _sizeAutoObserverElementNative;\n                var _sizeObserverElementNative;\n                var _paddingElementNative;\n                var _viewportElementNative;\n                var _contentElementNative;\n\n                //Cache:\n                var _hostSizeCache;\n                var _contentScrollSizeCache;\n                var _arrangeContentSizeCache;\n                var _hasOverflowCache;\n                var _hideOverflowCache;\n                var _widthAutoCache;\n                var _heightAutoCache;\n                var _cssMaxValueCache;\n                var _cssBoxSizingCache;\n                var _cssPaddingCache;\n                var _cssBorderCache;\n                var _cssMarginCache;\n                var _cssDirectionCache;\n                var _cssDirectionDetectedCache;\n                var _paddingAbsoluteCache;\n                var _clipAlwaysCache;\n                var _contentGlueSizeCache;\n                var _overflowBehaviorCache;\n                var _overflowAmountCache;\n                var _ignoreOverlayScrollbarHidingCache;\n                var _autoUpdateCache;\n                var _sizeAutoCapableCache;\n                var _contentElementScrollSizeChangeDetectedCache;\n                var _hostElementSizeChangeDetectedCache;\n                var _scrollbarsVisibilityCache;\n                var _scrollbarsAutoHideCache;\n                var _scrollbarsClickScrollingCache;\n                var _scrollbarsDragScrollingCache;\n                var _resizeCache;\n                var _normalizeRTLCache;\n                var _classNameCache;\n                var _oldClassName;\n                var _textareaAutoWrappingCache;\n                var _textareaInfoCache;\n                var _textareaSizeCache;\n                var _textareaDynHeightCache;\n                var _textareaDynWidthCache;\n                var _bodyMinSizeCache;\n                var _viewportScrollSizeCache;\n                var _displayIsHiddenCache;\n                var _updateAutoCache = { };\n\n                //MutationObserver:\n                var _mutationObserverHost;\n                var _mutationObserverContent;\n                var _mutationObserverHostCallback;\n                var _mutationObserverContentCallback;\n                var _mutationObserversConnected;\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'];\n\n                //textarea:\n                var _textareaEvents;\n                var _textareaHasFocus;\n\n                //scrollbars:\n                var _scrollbarsAutoHideTimeoutId;\n                var _scrollbarsAutoHideMoveTimeoutId;\n                var _scrollbarsAutoHideDelay;\n                var _scrollbarsAutoHideNever;\n                var _scrollbarsAutoHideScroll;\n                var _scrollbarsAutoHideMove;\n                var _scrollbarsAutoHideLeave;\n                var _scrollbarsHandleHovered;\n                var _scrollbarsHandlesDefineScrollPos;\n\n                //resize\n                var _resizeReconnectMutationObserver;\n                var _resizeNone;\n                var _resizeBoth;\n                var _resizeHorizontal;\n                var _resizeVertical;\n                var _resizeOnMouseTouchDown;\n                \n                \n                //==== Passive Event Listener ====//\n\n                /**\n                 * Adds or removes a passive event listener from the given element.\n                 * @param element The element to which the event listener shall be applied or removed.\n                 * @param eventNames The name(s) of the events.\n                 * @param listener The method which shall be called.\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\n                 */\n                function setupPassiveEventListener(element, eventNames, listener, remove, notPassive) {\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\n                    var events = eventNames.split(_strSpace);\n                    var i = 0;\n\n                    for (; i < events[LEXICON.l]; i++) {\n                        element[0][method](events[i], listener, { passive: !notPassive });\n                    }\n                }\n\n\n                //==== Resize Observer ====//\n\n                /**\n                 * Adds or removes a resize observer from the given element.\n                 * @param targetElement The element to which the resize observer shall be added or removed.\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\n                 */\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\n                    if(targetElement) {\n                        //add resize observer:\n                        if(onElementResizedCallback) {\n                            var constMaximum = 3333333;\n                            var resizeObserver = COMPATIBILITY.rO();\n                            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n                            var strChildNodes = 'childNodes';\n                            var callback = function () {\n                                targetElement[_strScrollTop](constMaximum)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constMaximum : _rtlScrollBehavior.i ? 0 : constMaximum : constMaximum);\n                                onElementResizedCallback();\n                            };\n                            if (_supportResizeObserver) {\n                                var element = targetElement.append(generateDiv(_classNameResizeObserverElement + ' observed')).contents()[0];\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                                observer.observe(element);\n                            }\n                            else {\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                                    targetElement.prepend(\n                                        generateDiv(_classNameResizeObserverElement,\n                                            generateDiv({ className : _classNameResizeObserverItemElement, dir : \"ltr\" },\n                                                generateDiv(_classNameResizeObserverItemElement,\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\n                                                ) +\n                                                generateDiv(_classNameResizeObserverItemElement,\n                                                    generateDiv({ className : _classNameResizeObserverItemFinalElement, style : 'width: 200%; height: 200%' })\n                                                )\n                                            )\n                                        )\n                                    );\n\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                                    var widthCache = observerElement[LEXICON.oW];\n                                    var heightCache = observerElement[LEXICON.oH];\n                                    var isDirty;\n                                    var rAFId;\n                                    var currWidth;\n                                    var currHeight;\n                                    var factor = 2;\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n                                    var reset = function () {\n                                        /*\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\n                                         var expandChildCSS = {};\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\n                                         expandElementChild.css(expandChildCSS);\n\n\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\n                                         */\n                                        expandElement[_strScrollLeft](constMaximum)[_strScrollTop](constMaximum);\n                                        shrinkElement[_strScrollLeft](constMaximum)[_strScrollTop](constMaximum);\n                                    };\n                                    var onResized = function () {\n                                        rAFId = 0;\n                                        if (!isDirty)\n                                            return;\n\n                                        widthCache = currWidth;\n                                        heightCache = currHeight;\n                                        callback();\n                                    };\n                                    var onScroll = function (event) {\n                                        currWidth = observerElement[LEXICON.oW];\n                                        currHeight = observerElement[LEXICON.oH];\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                                        if (event && isDirty && !rAFId) {\n                                            COMPATIBILITY.cAF()(rAFId);\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\n                                        }\n                                        else if(!event)\n                                            onResized();\n\n                                        reset();\n                                        if (event) {\n                                            COMPATIBILITY.prvD(event);\n                                            COMPATIBILITY.stpP(event);\n                                        }\n                                        return false;\n                                    };\n                                    var expandChildCSS = {};\n                                    var observerElementCSS = {};\n\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\n                                        -((nativeScrollbarSize.y + 1) * factor),\n                                        nativeScrollbarSize.x * -factor,\n                                        nativeScrollbarSize.y * -factor,\n                                        -((nativeScrollbarSize.x + 1) * factor)\n                                    ]);\n\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\n                                    expandElement.on(_strScroll, onScroll);\n                                    shrinkElement.on(_strScroll, onScroll);\n                                    targetElement.on(strAnimationStartEvent, function () {\n                                        onScroll(false);\n                                    });\n                                    //lets assume that the divs will never be that large and a constant value is enough\n                                    expandChildCSS[_strWidth] = constMaximum;\n                                    expandChildCSS[_strHeight] = constMaximum;\n                                    expandElementChild.css(expandChildCSS);\n\n                                    reset();\n                                }\n                                else {\n                                    var attachEvent = _documentElementNative.attachEvent;\n                                    var isIE = _msieVersion !== undefined;\n                                    if (attachEvent) {\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                                    }\n                                    else {\n                                        var obj = _documentElementNative.createElement(TYPES.o);\n                                        obj.setAttribute('tabindex', '-1');\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n                                        obj.onload = function () {\n                                            var wnd = this.contentDocument.defaultView;\n                                            wnd.addEventListener('resize', callback);\n                                            wnd.document.documentElement.style.display = 'none';\n                                        };\n                                        obj.type = 'text/html';\n                                        if (isIE)\n                                            targetElement.prepend(obj);\n                                        obj.data = 'about:blank';\n                                        if (!isIE)\n                                            targetElement.prepend(obj);\n                                        targetElement.on(strAnimationStartEvent, callback);\n                                    }\n                                }\n                            }\n\n                            //direction change detection:\n                            if (targetElement[0] === _sizeObserverElementNative) {\n                                var directionChanged = function () {\n                                    var dir = _hostElement.css('direction');\n                                    var css = {};\n                                    var scrollLeftValue = 0;\n                                    var result = false;\n                                    if (dir !== _cssDirectionDetectedCache) {\n                                        if (dir === 'ltr') {\n                                            css[_strLeft] = 0;\n                                            css[_strRight] = _strAuto;\n                                            scrollLeftValue = constMaximum;\n                                        }\n                                        else {\n                                            css[_strLeft] = _strAuto;\n                                            css[_strRight] = 0;\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constMaximum : _rtlScrollBehavior.i ? 0 : constMaximum;\n                                        }\n                                        _sizeObserverElement.children().eq(0).css(css);\n                                        targetElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constMaximum);\n                                        _cssDirectionDetectedCache = dir;\n                                        result = true;\n                                    }\n                                    return result;\n                                };\n                                directionChanged();\n                                targetElement.on(_strScroll, function (event) {\n                                    if (directionChanged())\n                                        update();\n                                    COMPATIBILITY.prvD(event);\n                                    COMPATIBILITY.stpP(event);\n                                    return false;\n                                });\n                            }\n                        }\n                        //remove resize observer:\n                        else {\n                            if (_supportResizeObserver) {\n                                var element = targetElement.contents()[0];\n                                var resizeObserverObj = element[_strResizeObserverProperty];\n                                if(resizeObserverObj) {\n                                    resizeObserverObj.disconnect();\n                                    delete element[_strResizeObserverProperty];\n                                }\n                            }\n                            else {\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n                            }\n                        }\n                    }\n                }\n\n                /**\n                 * Freezes or unfreezes the given resize observer.\n                 * @param targetElement The element to which the target resize observer is applied.\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\n                 \n                function freezeResizeObserver(targetElement, freeze) {\n                    if (targetElement !== undefined) {\n                        if(freeze) {\n                            if (_supportResizeObserver) {\n                                var element = targetElement.contents()[0];\n                                element[_strResizeObserverProperty].unobserve(element);\n                            }\n                            else {\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\n                                var w = targetElement.css(_strWidth);\n                                var h = targetElement.css(_strHeight);\n                                var css = {};\n                                css[_strWidth] = w;\n                                css[_strHeight] = h;\n                                targetElement.css(css);\n                            }\n                        }\n                        else {\n                            if (_supportResizeObserver) {\n                                var element = targetElement.contents()[0];\n                                element[_strResizeObserverProperty].observe(element);\n                            }\n                            else {\n                                var css = { };\n                                css[_strHeight] = _strEmpty;\n                                css[_strWidth] = _strEmpty;\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\n                            }\n                        }\n                    }\n                }\n                */\n\n\n                //==== Mutation Observers ====//\n\n                /**\n                 * Creates MutationObservers for the host and content Element if they are supported.\n                 */\n                function createMutationObservers() {\n                    if (_supportMutationObserver) {\n                        var mutationObserverContentLag = 11;\n                        var mutationObserver = COMPATIBILITY.mO();\n                        var contentLastUpdate = COMPATIBILITY.now();\n                        var mutationTarget;\n                        var mutationAttrName;\n                        var contentTimeout;\n                        var now;\n                        var sizeAuto;\n                        var action;\n\n                        _mutationObserverHostCallback = function(mutations) {\n                            var doUpdate = false;\n                            var mutation;\n                                \n                            if (_initialized && !_sleeping) {\n                                each(mutations, function () {\n                                    mutation = this;\n                                    mutationTarget = mutation.target;\n                                    mutationAttrName = mutation.attributeName;\n\n                                    if (mutationAttrName === LEXICON.c)\n                                        doUpdate = hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\n                                    else if (mutationAttrName === LEXICON.s)\n                                        doUpdate = mutation.oldValue !== mutationTarget[LEXICON.s].cssText;\n                                    else\n                                        doUpdate = true;\n\n                                    if (doUpdate)\n                                        return false;\n                                });\n\n                                if (doUpdate)\n                                    _base.update(_strAuto);\n                            }\n                            return doUpdate;\n                        };\n                        _mutationObserverContentCallback = function (mutations) {\n                            var doUpdate = false;\n                            var mutation;\n                            \n                            if (_initialized && !_sleeping) {\n                                each(mutations, function () {\n                                    mutation = this;\n                                    doUpdate = isUnknownMutation(mutation);\n                                    return !doUpdate;\n                                });\n\n                                if (doUpdate) {\n                                    now = COMPATIBILITY.now();\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\n                                    action = function () {\n                                        if(!_destroyed) {\n                                            contentLastUpdate = now;\n\n                                            //if cols, rows or wrap attr was changed\n                                            if (_isTextarea)\n                                                textareaUpdate();\n\n                                            if (sizeAuto)\n                                                update();\n                                            else\n                                                _base.update(_strAuto);\n                                        }\n                                    };\n                                    clearTimeout(contentTimeout);\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\n                                        action();\n                                    else\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\n                                }\n                            }\n                            return doUpdate;\n                        }\n\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n                    }\n                }\n\n                /**\n                 * Connects the MutationObservers if they are supported.\n                 */\n                function connectMutationObservers() {\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\n                        _mutationObserverHost.observe(_hostElementNative, {\n                            attributes: true,\n                            attributeOldValue: true,\n                            attributeFilter: _mutationObserverAttrsHost\n                        });\n\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n                            attributes: true,\n                            attributeOldValue: true,\n                            subtree: !_isTextarea,\n                            childList: !_isTextarea,\n                            characterData: !_isTextarea,\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n                        });\n\n                        _mutationObserversConnected = true;\n                    }\n                }\n\n                /**\n                 * Disconnects the MutationObservers if they are supported.\n                 */\n                function disconnectMutationObservers() {\n                    if (_supportMutationObserver && _mutationObserversConnected) {\n                        _mutationObserverHost.disconnect();\n                        _mutationObserverContent.disconnect();\n\n                        _mutationObserversConnected = false;\n                    }\n                }\n\n               \n               //==== Events of elements ====//\n\n                /**\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\n                 * If there are any size changes, the update method gets called.\n                 */\n                function hostOnResized() {\n                    if (!_sleeping) {\n                        var changed;\n                        var hostSize = {\n                            w: _sizeObserverElementNative[LEXICON.sW],\n                            h: _sizeObserverElementNative[LEXICON.sH]\n                        };\n                        \n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n                        _hostElementSizeChangeDetectedCache = hostSize;\n                        if (changed)\n                            update({ _hostSizeChanged : true });\n                    }\n                }\n\n                /**\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\n                 */\n                function hostOnMouseEnter() {\n                    if (_scrollbarsAutoHideLeave)\n                        refreshScrollbarsAutoHide(true);\n                }\n\n                /**\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\n                 */\n                function hostOnMouseLeave() {\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\n                        refreshScrollbarsAutoHide(false);\n                }\n\n                /**\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\n                 */\n                function hostOnMouseMove() {\n                    if (_scrollbarsAutoHideMove) {\n                        refreshScrollbarsAutoHide(true);\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n                            if (_scrollbarsAutoHideMove && !_destroyed)\n                                refreshScrollbarsAutoHide(false);\n                        }, 100);\n                    }\n                }\n\n                 /**\n                 * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\n                 * @param destroy Indicates whether the events shall be added or removed.\n                 */\n                function setupHostMouseTouchEvents(destroy) {\n                    var strOnOff = destroy ? 'off' : 'on';\n                    var setupEvent = function(target, name, listener) {\n                        if(_supportPassiveEvents)\n                            setupPassiveEventListener(target, name, listener, destroy);\n                        else\n                            target[strOnOff](name, listener);\n                    };\n\n                    if(_scrollbarsAutoHideMove && !destroy)\n                        setupEvent(_hostElement, _strMouseTouchMoveEvent, hostOnMouseMove);\n                    else {\n                        if(destroy)\n                            setupEvent(_hostElement, _strMouseTouchMoveEvent, hostOnMouseMove);\n                        setupEvent(_hostElement, _strMouseTouchEnter, hostOnMouseEnter);\n                        setupEvent(_hostElement, _strMouseTouchLeave, hostOnMouseLeave);\n                    }\n\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n                    if(!_initialized && !destroy)\n                        _hostElement.one(\"mouseover\", hostOnMouseEnter);\n                }\n\n                /**\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\n                 * @param event The select start event.\n                 */\n                function documentOnSelectStart(event) {\n                    COMPATIBILITY.prvD(event);\n                    return false;\n                }\n\n                /**\n                 * A callback which will be called after a img element has downloaded its src asynchronous.\n                 */\n                function imgOnLoad() {\n                    update({ _contentSizeChanged : true });\n                }\n\n\n                //==== Update Detection ====//\n\n                /**\n                 * Measures the min width and min height of the body element and refreshes the related cache.\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\n                 */\n                function bodyMinSizeChanged() {\n                    var bodyMinSize = {};\n                    if (_isBody && _contentArrangeElement) {\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\n                    }\n                    _bodyMinSizeCache = bodyMinSize;\n                    return !!bodyMinSize.c;\n                }\n\n                /**\n                 * Returns true if the class names really changed (new class without plugin host prefix)\n                 * @param oldCassNames The old ClassName string.\n                 * @param newClassNames The new ClassName string.\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\n                 */\n                function hostClassNamesChanged(oldCassNames, newClassNames) {\n                    var currClasses = (newClassNames !== undefined && newClassNames !== null) ? newClassNames.split(_strSpace) : _strEmpty;\n                    var oldClasses = (oldCassNames !== undefined && oldCassNames !== null) ? oldCassNames.split(_strSpace) : _strEmpty;\n                    if (currClasses === _strEmpty && oldClasses === _strEmpty)\n                        return false;\n                    var diff = getArrayDifferences(oldClasses, currClasses);\n                    var changed = false;\n                    var oldClassNames = _oldClassName !== undefined && _oldClassName !== null ? _oldClassName.split(_strSpace) : [_strEmpty];\n                    var currClassNames = _classNameCache !== undefined && _classNameCache !== null ? _classNameCache.split(_strSpace) : [_strEmpty];\n\n                    //remove none theme from diff list to prevent update\n                    var idx = inArray(_classNameThemeNone, diff);\n                    var curr;\n                    var i;\n                    var v;\n                    var o;\n                    var c;\n\n                    if (idx > -1)\n                        diff.splice(idx, 1);\n\n                    for (i = 0; i < diff.length; i++) {\n                        curr = diff[i];\n                        if (curr.indexOf(_classNameHostElement) !== 0) {\n                            o = true;\n                            c = true;\n                            for (v = 0; v < oldClassNames.length; v++) {\n                                if (curr === oldClassNames[v]) {\n                                    o = false;\n                                    break;\n                                }\n                            }\n                            for (v = 0; v < currClassNames.length; v++) {\n                                if (curr === currClassNames[v]) {\n                                    c = false;\n                                    break;\n                                }\n                            }\n                            if (o && c) {\n                                changed = true;\n                                break;\n                            }\n                        }\n\n                    }\n                    return changed;\n                }\n\n                /**\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\n                 * @param mutation The mutation which shall be checked.\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\n                 */\n                function isUnknownMutation(mutation) {\n                    var attributeName = mutation.attributeName;\n                    var mutationTarget = mutation.target;\n                    var mutationType = mutation.type;\n                    var strClosest = 'closest';\n\n                    if (mutationTarget === _contentElementNative)\n                        return attributeName === null;\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n                        //ignore className changes by the plugin\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.getAttribute(LEXICON.c));\n\n                        //only do it of browser support it natively\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\n                            return true;\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\n                            return false;\n                    }\n                    return true;\n                }\n\n                /**\n                 * Returns true if the content size was changed since the last time this method was called.\n                 * @returns {boolean} True if the content size was changed, false otherwise.\n                 */\n                function updateAutoContentSizeChanged() {\n                    if (_sleeping)\n                        return false;\n                    \n                    var contentMeasureElement = getContentMeasureElement();\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n                    var viewportScrollSize = { };\n                    var css = { };\n                    var float;\n                    var bodyMinSizeC;\n                    var changed;\n                    var viewportScrollSizeChanged;\n                    var contentElementScrollSize;\n\n                    //fix for https://bugzilla.mozilla.org/show_bug.cgi?id=1439305, it only works with \"clipAlways : true\"\n                    //it can work with \"clipAlways : false\" too, but I had to set the overflow of the viewportElement to hidden every time before measuring\n                    if(_restrictedMeasuring) {\n                        viewportScrollSize = {\n                            x : _viewportElementNative[LEXICON.sW],\n                            y : _viewportElementNative[LEXICON.sH]\n                        }\n                    }\n                    if (setCSS) {\n                        float = _contentElement.css(_strFloat);\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\n                        css[_strWidth] = _strAuto;\n                        _contentElement.css(css);\n                    }\n                    contentElementScrollSize = {\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n                    };\n                    if (setCSS) {\n                        css[_strFloat] = float;\n                        css[_strWidth] = _strHundredPercent;\n                        _contentElement.css(css);\n                    }\n\n                    bodyMinSizeC = bodyMinSizeChanged();\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n                    viewportScrollSizeChanged = checkCache(viewportScrollSize, _viewportScrollSizeCache);\n\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n                    _viewportScrollSizeCache = viewportScrollSize;\n\n                    return changed || bodyMinSizeC || viewportScrollSizeChanged;\n                }\n\n                /**\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\n                 */\n                function meaningfulAttrsChanged() {\n                    if (_sleeping || _mutationObserversConnected)\n                        return;\n                    \n                    var changed;\n                    var elem;\n                    var curr;\n                    var cache;\n                    var checks = [\n                        {\n                            _elem: _hostElement, \n                            _props : _mutationObserverAttrsHost.concat(':visible')\n                        },\n                        {\n                            _elem: _isTextarea ? _targetElement : undefined, \n                            _props : _mutationObserverAttrsTextarea\n                        }\n                    ];\n                    \n                    each(checks, function(index, check) { \n                        elem = check._elem;\n                        if(elem) {\n                            each(check._props, function(index, prop) { \n                                curr = prop.charAt(0) === ':' ? elem.is(prop) : elem.attr(prop);\n                                cache = _updateAutoCache[prop];\n                                \n                                changed = changed || checkCache(curr, cache);\n                                \n                                _updateAutoCache[prop] = curr;\n                            });\n                        }\n                    });\n                    \n                    return changed;\n                }\n\n                /**\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\n                 * @param propertyName The CSS property name.\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\n                 */\n                function isSizeAffectingCSSProperty(propertyName) {\n                    if (!_initialized)\n                        return true;\n                    var flexGrow = 'flex-grow';\n                    var flexShrink = 'flex-shrink';\n                    var flexBasis = 'flex-basis';\n                    var affectingPropsX = [\n                        _strWidth,\n                        _strMinMinus + _strWidth,\n                        _strMaxMinus + _strWidth,\n                        _strMarginMinus + _strLeft,\n                        _strMarginMinus + _strRight,\n                        _strLeft,\n                        _strRight,\n                        'font-weight',\n                        'word-spacing',\n                        flexGrow,\n                        flexShrink,\n                        flexBasis\n                    ];\n                    var affectingPropsXContentBox = [\n                        _strPaddingMinus + _strLeft,\n                        _strPaddingMinus + _strRight,\n                        _strBorderMinus + _strLeft + _strWidth,\n                        _strBorderMinus + _strRight + _strWidth\n                    ];\n                    var affectingPropsY = [\n                        _strHeight,\n                        _strMinMinus + _strHeight,\n                        _strMaxMinus + _strHeight,\n                        _strMarginMinus + _strTop,\n                        _strMarginMinus + _strBottom,\n                        _strTop,\n                        _strBottom,\n                        'line-height',\n                        flexGrow,\n                        flexShrink,\n                        flexBasis\n                    ];\n                    var affectingPropsYContentBox = [\n                        _strPaddingMinus + _strTop,\n                        _strPaddingMinus + _strBottom,\n                        _strBorderMinus + _strTop + _strWidth,\n                        _strBorderMinus + _strBottom + _strWidth\n                    ];\n                    var _strS = 's';\n                    var _strVS = 'v-s';\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n                    var sizeIsAffected = false;\n                    var checkPropertyName = function (arr, name) {\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\n                            if (arr[i] === name)\n                                return true;\n                        }\n                        return false;\n                    };\n\n                    if (checkY) {\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n                        if (!sizeIsAffected && !_isBorderBox)\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n                    }\n                    if (checkX && !sizeIsAffected) {\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n                        if (!sizeIsAffected && !_isBorderBox)\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n                    }\n                    return sizeIsAffected;\n                }\n\n                \n                //==== Update ====//\n\n                /**\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\n                 */\n                function textareaUpdate() {\n                    if (!_sleeping) {\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\n                        var minWidth = _viewportSize.w;\n                        var minHeight = _viewportSize.h;\n                        var css = { };\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\n                        var origWidth;\n                        var width;\n                        var origHeight;\n                        var height;\n\n                        //reset min size\n                        css[_strMinMinus + _strWidth] = _strEmpty;\n                        css[_strMinMinus + _strHeight] = _strEmpty;\n\n                        //set width auto\n                        css[_strWidth] = _strAuto;\n                        _targetElement.css(css);\n\n                        //measure width\n                        origWidth = _targetElementNative[LEXICON.oW];\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n\n                        //set measured width\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\n\n                        //set height auto\n                        css[_strHeight] = _strAuto;\n                        _targetElement.css(css);\n\n                        //measure height\n                        origHeight = _targetElementNative[LEXICON.oH];\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\n\n                        //append correct size values\n                        css[_strWidth] = width;\n                        css[_strHeight] = height;\n                        _textareaCoverElement.css(css);\n\n                        //apply min width / min height to prevent textarea collapsing\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\n                        _targetElement.css(css);\n\n                        return {\n                            _originalWidth: origWidth,\n                            _originalHeight: origHeight,\n                            _dynamicWidth: width,\n                            _dynamicHeight: height\n                        };\n                    }\n                }\n\n                /**\n                 * Updates the plugin and DOM to the current options.\n                 * This method should only be called if a update is 100% required.\n                 * @param updateHints A objects which contains hints for this update:\n                 * {\n                 *   _hostSizeChanged : boolean,\n                 *   _contentSizeChanged : boolean,\n                 *   _force : boolean,                             == preventSwallowing\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\n                *  }\n                 */\n                function update(updateHints) {\n                    clearTimeout(_swallowedUpdateTimeout);\n                    updateHints = updateHints || { };\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n                    _swallowedUpdateHints._force |= updateHints._force;\n                    \n                    var now = COMPATIBILITY.now();\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n                    var force = !!_swallowedUpdateHints._force;\n                    var changedOptions = updateHints._changedOptions;    \n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);                    \n                    var displayIsHidden;\n\n                    if(swallow)\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\n\n                    //abort update due to:\n                    //destroyed\n                    //swallowing\n                    //sleeping\n                    //host is hidden or has false display\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\n                        return;\n\n                    _lastUpdateTime = now;\n                    _swallowedUpdateHints = { };\n                    \n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                        //native scrollbars are hidden, so change the values to zero\n                        _nativeScrollbarSize.x = 0;\n                        _nativeScrollbarSize.y = 0;\n                    }\n                    else {\n                        //refresh native scrollbar size (in case of zoom)\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n                    }\n\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n                    // The calculation: [scrollbar size +3 *3]\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n                    _nativeScrollbarMinSize = {\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n                    };\n                    \n                    //changedOptions = changedOptions || { };\n                    //freezeResizeObserver(_sizeObserverElement, true);\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\n                    \n                    var checkCacheAutoForce = function () {\n                        return checkCache.apply(this, [].slice.call(arguments).concat([ force ]));\n                    };\n                    \n                    //save current scroll offset\n                    var currScroll = {\n                        x: _viewportElement[_strScrollLeft](),\n                        y: _viewportElement[_strScrollTop]()\n                    };\n\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\n\n                    //scrollbars visibility:\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\n\n                    //scrollbars autoHide:\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\n\n                    //scrollbars click scrolling\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\n\n                    //scrollbars drag scrolling\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\n\n                    //className\n                    var className = _currentPreparedOptions.className;\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\n\n                    //resize\n                    var resize = _currentPreparedOptions.resize;\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n\n                    //paddingAbsolute\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\n\n                    //clipAlways\n                    var clipAlways = _currentPreparedOptions.clipAlways;\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\n\n                    //sizeAutoCapable\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\n\n                    //showNativeScrollbars\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\n\n                    //autoUpdate\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\n\n                    //overflowBehavior\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\n\n                    //dynWidth:\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\n\n                    //dynHeight:\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\n\n                    //scrollbars visibility\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\n\n                    //scrollbars autoHideDelay\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\n\n                    //old className\n                    _oldClassName = _classNameCache;\n\n                    //resize\n                    _resizeNone = resize === 'n';\n                    _resizeBoth = resize === 'b';\n                    _resizeHorizontal = resize === 'h';\n                    _resizeVertical = resize === 'v';\n\n                    //normalizeRTL\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\n\n                    //ignore overlay scrollbar hiding\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\n\n                    //refresh options cache\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n                    _classNameCache = className;\n                    _resizeCache = resize;\n                    _paddingAbsoluteCache = paddingAbsolute;\n                    _clipAlwaysCache = clipAlways;\n                    _sizeAutoCapableCache = sizeAutoCapable;\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n                    _autoUpdateCache = autoUpdate;\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n                    _textareaDynWidthCache = textareaDynWidth;\n                    _textareaDynHeightCache = textareaDynHeight;\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\n\n                    //set correct class name to the host element\n                    if (classNameChanged) {\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\n                    }\n\n                    //set correct auto Update\n                    if (autoUpdateChanged) {\n                        if (autoUpdate === true) {\n                            disconnectMutationObservers();\n                            autoUpdateLoop.add(_base);\n                        }\n                        else if (autoUpdate === null) {\n                            if (_autoUpdateRecommended) {\n                                disconnectMutationObservers();\n                                autoUpdateLoop.add(_base);\n                            }\n                            else {\n                                autoUpdateLoop.remove(_base);\n                                connectMutationObservers();\n                            }\n                        }\n                        else {\n                            autoUpdateLoop.remove(_base);\n                            connectMutationObservers();\n                        }\n                    }\n\n                    //activate or deactivate size auto capability\n                    if (sizeAutoCapableChanged) {\n                        if (sizeAutoCapable) {\n                            if (!_contentGlueElement) {\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n                                _paddingElement.before(_contentGlueElement);\n                            }\n                            else {\n                                _contentGlueElement.show();\n                            }\n                            if (_sizeAutoObserverAdded) {\n                                _sizeAutoObserverElement.show();\n                            }\n                            else {\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                                _contentGlueElement.before(_sizeAutoObserverElement);\n                                var oldSize = {w: -1, h: -1};\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\n                                    var newSize = {\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\n                                    };\n                                    if (checkCache(newSize, oldSize)) {\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\n                                            update();\n                                        }\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\n                                            update();\n                                        }\n                                    }\n                                    oldSize = newSize;\n                                });\n                                _sizeAutoObserverAdded = true;\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n                                if (_cssCalc !== null)\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n                            }\n                        }\n                        else {\n                            if (_sizeAutoObserverAdded)\n                                _sizeAutoObserverElement.hide();\n                            if (_contentGlueElement)\n                                _contentGlueElement.hide();\n                        }\n                    }\n\n                    //if force, update all resizeObservers too\n                    if (force) {\n                        _sizeObserverElement.find('*').trigger(_strScroll);\n                        if (_sizeAutoObserverAdded)\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\n                    }\n\n                    //display hidden:\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\n                    var displayIsHiddenChanged = checkCacheAutoForce(displayIsHidden, _displayIsHiddenCache);\n\n                    //textarea AutoWrapping:\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\n\n                    //detect direction:\n                    var cssDirection = _hostElement.css('direction');\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\n\n                    //detect box-sizing:\n                    var boxSizing = _hostElement.css('box-sizing');\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\n\n                    //detect padding:\n                    var padding = {\n                        c: force,\n                        t: parseToZeroOrNumber(_hostElement.css(_strPaddingMinus + _strTop)),\n                        r: parseToZeroOrNumber(_hostElement.css(_strPaddingMinus + _strRight)),\n                        b: parseToZeroOrNumber(_hostElement.css(_strPaddingMinus + _strBottom)),\n                        l: parseToZeroOrNumber(_hostElement.css(_strPaddingMinus + _strLeft))\n                    };\n                    \n                    //width + height auto detecting var:\n                    var sizeAutoObserverElementBCRect;\n                    //exception occurs in IE8 sometimes (unknown exception)\n                    try {\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative.getBoundingClientRect() : null;\n                    } catch (ex) {\n                        return;\n                    }\n\n                    _isRTL = cssDirection === 'rtl';\n                    _isBorderBox = (boxSizing === 'border-box');\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\n\n                    //detect width auto:\n                    var widthAutoResizeDetection = false;\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n                        _contentGlueElement.css(_strWidth, _strAuto);\n\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n                        if (!widthAutoResizeDetection) {\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n                        }\n                    }\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\n\n                    //detect height auto:\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\n\n                    //detect border:\n                    //we need the border only if border box and auto size\n                    var strMinusWidth = '-' + _strWidth;\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\n                    var border = {\n                        c: force,\n                        t: updateBorderY ? parseToZeroOrNumber(_hostElement.css(_strBorderMinus + _strTop + strMinusWidth), true) : 0,\n                        r: updateBorderX ? parseToZeroOrNumber(_hostElement.css(_strBorderMinus + _strRight + strMinusWidth), true) : 0,\n                        b: updateBorderY ? parseToZeroOrNumber(_hostElement.css(_strBorderMinus + _strBottom + strMinusWidth), true) : 0,\n                        l: updateBorderX ? parseToZeroOrNumber(_hostElement.css(_strBorderMinus + _strLeft + strMinusWidth), true) : 0\n                    };\n\n                    //detect margin:\n                    var margin = {\n                        c: force,\n                        t: parseToZeroOrNumber(_hostElement.css(_strMarginMinus + _strTop)),\n                        r: parseToZeroOrNumber(_hostElement.css(_strMarginMinus + _strRight)),\n                        b: parseToZeroOrNumber(_hostElement.css(_strMarginMinus + _strBottom)),\n                        l: parseToZeroOrNumber(_hostElement.css(_strMarginMinus + _strLeft))\n                    };\n\n                    //detect css max width & height:\n                    var cssMaxValue = {\n                        h: String(_hostElement.css(_strMaxMinus + _strHeight)),\n                        w: String(_hostElement.css(_strMaxMinus + _strWidth))\n                    };\n\n                    //vars to apply correct css\n                    var contentElementCSS = { };\n                    var contentGlueElementCSS = { };\n\n                    //funcs\n                    var getHostSize = function() {\n                        //has to be clientSize because offsetSize respect borders\n                        return {\n                            w: _hostElementNative[LEXICON.cW],\n                            h: _hostElementNative[LEXICON.cH]\n                        };\n                    };\n                    var getViewportSize = function() {\n                        //viewport size is padding container because it never has padding, margin and a border\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\n                        return {\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n                        };\n                    };\n\n                    //set info for padding\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\n\n                    //set info for border\n                    _borderX = border.l + border.r;\n                    _borderY = border.t + border.b;\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\n\n                    //set info for margin\n                    _marginX = margin.l + margin.r;\n                    _marginY = margin.t + margin.b;\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\n\n                    //set info for css max value\n                    cssMaxValue.ih = parseToZeroOrNumber(cssMaxValue.h); //ih = integer height\n                    cssMaxValue.iw = parseToZeroOrNumber(cssMaxValue.w); //iw = integer width\n                    cssMaxValue.ch = cssMaxValue.h.indexOf('px') > -1; //ch = correct height\n                    cssMaxValue.cw = cssMaxValue.w.indexOf('px') > -1; //cw = correct width\n                    cssMaxValue.c = checkCacheAutoForce(cssMaxValue, _cssMaxValueCache);\n\n                    //refresh cache\n                    _displayIsHiddenCache = displayIsHidden;\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\n                    _cssDirectionCache = cssDirection;\n                    _cssBoxSizingCache = boxSizing;\n                    _widthAutoCache = widthAuto;\n                    _heightAutoCache = heightAuto;\n                    _cssPaddingCache = padding;\n                    _cssBorderCache = border;\n                    _cssMarginCache = margin;\n                    _cssMaxValueCache = cssMaxValue;\n                        \n                    //IEFix direction changed\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\n\n                    //apply padding:\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n                        var paddingElementCSS = {};\n                        var textareaCSS = {};\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n                        if (paddingAbsolute) {\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, [padding.t, padding.r, padding.b, padding.l]);\n                            if (_isTextarea)\n                                setTopRightBottomLeft(textareaCSS, _strPaddingMinus);\n                            else\n                                setTopRightBottomLeft(contentElementCSS, _strPaddingMinus);\n                        }\n                        else {\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n                            if (_isTextarea)\n                                setTopRightBottomLeft(textareaCSS, _strPaddingMinus, [padding.t, padding.r, padding.b, padding.l]);\n                            else\n                                setTopRightBottomLeft(contentElementCSS, _strPaddingMinus, [padding.t, padding.r, padding.b, padding.l]);\n                        }\n                        _paddingElement.css(paddingElementCSS);\n                        _targetElement.css(textareaCSS);\n                    }\n\n                    //viewport size is padding container because it never has padding, margin and a border.\n                    _viewportSize = getViewportSize();\n\n                    //update Textarea\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\n                        w : textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n                        h : textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n                    } : { };\n                    _textareaSizeCache = textareaSize;\n\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || cssMaxValue.c || padding.c || border.c)) {\n                        /*\n                        if (cssMaxValue.ch)\n                            contentElementCSS[_strMaxMinus + _strHeight] =\n                                (cssMaxValue.ch ? (cssMaxValue.ih - paddingAbsoluteY + (_isBorderBox ? -_borderY : _paddingY))\n                                : _strEmpty);\n                        */\n                        contentElementCSS[_strHeight] = _strAuto;\n                    }\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\n                        contentElementCSS[_strMaxMinus + _strHeight] = _strEmpty;\n                        contentElementCSS[_strHeight] = _strHundredPercent;\n                    }\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || cssMaxValue.c || padding.c || border.c || cssDirectionChanged)) {\n                        /*\n                        if (cssMaxValue.cw)\n                            contentElementCSS[_strMaxMinus + _strWidth] =\n                                (cssMaxValue.cw ? (cssMaxValue.iw - paddingAbsoluteX + (_isBorderBox ? -_borderX : _paddingX)) +\n                                (_nativeScrollbarIsOverlaid.y ? _overlayScrollbarDummySize.y : 0)\n                                : _strEmpty);\n                        */\n                        contentElementCSS[_strWidth] = _strAuto;\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n                    }\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\n                        contentElementCSS[_strMaxMinus + _strWidth] = _strEmpty;\n                        contentElementCSS[_strWidth] = _strHundredPercent;\n                        contentElementCSS[_strFloat] = _strEmpty;\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n                    }\n                    if (widthAuto) {\n                        if (!cssMaxValue.cw)\n                            contentElementCSS[_strMaxMinus + _strWidth] = _strEmpty;\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n                        contentGlueElementCSS[_strWidth] = _strAuto;\n\n                        contentElementCSS[_strWidth] = _strAuto;\n                        contentElementCSS[_strFloat] = isRTLRight;\n                    }\n                    else {\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\n                    }\n                    if (heightAuto) {\n                        if (!cssMaxValue.ch)\n                            contentElementCSS[_strMaxMinus + _strHeight] = _strEmpty;\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n                    }\n                    else {\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\n                    }\n                    if (sizeAutoCapable)\n                        _contentGlueElement.css(contentGlueElementCSS);\n                    _contentElement.css(contentElementCSS);\n\n                    //CHECKPOINT HERE ~\n                    contentElementCSS = {};\n                    contentGlueElementCSS = {};\n\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || cssMaxValue.c || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n                        var strOverflow = 'overflow';\n                        var strOverflowX = strOverflow + '-x';\n                        var strOverflowY = strOverflow + '-y';\n                        var strHidden = 'hidden';\n                        var strVisible = 'visible';\n                        //decide whether the content overflow must get hidden for correct overflow measuring, it !MUST! be always hidden if the height is auto\n                        var hideOverflow4CorrectMeasuring = _restrictedMeasuring ?\n                        (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) || //it must be hidden if native scrollbars are overlaid\n                        (_viewportSize.w < _nativeScrollbarMinSize.y || _viewportSize.h < _nativeScrollbarMinSize.x) || //it must be hidden if host-element is too small\n                        heightAuto || displayIsHiddenChanged //it must be hidden if height is auto or display was changed\n                            : heightAuto; //if there is not the restricted Measuring bug, it must be hidden if the height is auto\n\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n                        var viewportElementResetCSS = { };\n                        var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding && !_nativeScrollbarStyling ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\n                        var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding && !_nativeScrollbarStyling ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\n                        setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n                        _viewportElement.css(viewportElementResetCSS);\n                        if(hideOverflow4CorrectMeasuring)\n                            _contentElement.css(strOverflow, strHidden);\n\n                        //measure several sizes:\n                        var contentMeasureElement = getContentMeasureElement();\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n                        var contentMeasureElementGuaranty = _restrictedMeasuring && !hideOverflow4CorrectMeasuring ? _viewportElementNative : contentMeasureElement;\n                        var contentSize = {\n                            //use clientSize because natively overlaidScrollbars add borders\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n                        };\n                        var scrollSize = {\n                            w: MATH.max(contentMeasureElement[LEXICON.sW], contentMeasureElementGuaranty[LEXICON.sW]),\n                            h: MATH.max(contentMeasureElement[LEXICON.sH], contentMeasureElementGuaranty[LEXICON.sH])\n                        };\n\n                        //apply the correct viewport style and measure viewport size\n                        viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n                        viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n                        _viewportElement.css(viewportElementResetCSS);\n                        _viewportSize = getViewportSize();\n\n                        //measure and correct several sizes\n                        var hostSize = getHostSize();\n                        var contentGlueSize = {\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostSize.w),\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostSize.h)\n                        };\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n                        _contentGlueSizeCache = contentGlueSize;\n\n                        //apply correct contentGlue size\n                        if (sizeAutoCapable) {\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\n\n                                //textarea-sizes are already calculated correctly at this point\n                                if(!_isTextarea) {\n                                    contentSize = {\n                                        //use clientSize because natively overlaidScrollbars add borders\n                                        w: contentMeasureElement[LEXICON.cW],\n                                        h: contentMeasureElement[LEXICON.cH]\n                                    };\n                                }\n                            }\n                            var textareaCoverCSS = {};\n                            var setContentGlueElementCSSfunction = function(horizontal) {\n                                var scrollbarVars = getScrollbarVars(horizontal);\n                                var wh = scrollbarVars._w_h;\n                                var strWH = scrollbarVars._width_height;\n                                var autoSize = horizontal ? widthAuto : heightAuto;\n                                var borderSize = horizontal ? _borderX : _borderY;\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\n                                var marginSize = horizontal ? _marginX : _marginY;\n                                var maxSize = contentGlueElementCSS[strWH] + (_isBorderBox ? borderSize : -paddingSize);\n\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n                                if (!autoSize || (!autoSize && border.c))\n                                    contentGlueElementCSS[strWH] = hostSize[wh] - (_isBorderBox ? 0 : paddingSize + borderSize) - 1 - marginSize;\n\n                                //if size is auto and host is same size as max size, make content glue size +1 to make sure size changes will be detected\n                                if (autoSize && cssMaxValue['c' + wh] && cssMaxValue['i' + wh] === maxSize)\n                                    contentGlueElementCSS[strWH] = maxSize + (_isBorderBox ? 0 : paddingSize) + 1;\n\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n                                if (autoSize && (contentSize[wh] < _viewportSize[wh]) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                                    if (_isTextarea)\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                                    contentGlueElementCSS[strWH] -= 1;\n                                }\n\n                                //make sure content glue size is at least 1\n                                if (contentSize[wh] > 0)\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n                            };\n                            setContentGlueElementCSSfunction(true);\n                            setContentGlueElementCSSfunction(false);\n\n                            if (_isTextarea)\n                                _textareaCoverElement.css(textareaCoverCSS);\n                            _contentGlueElement.css(contentGlueElementCSS);\n                        }\n                        if (widthAuto)\n                            contentElementCSS[_strWidth] = _strHundredPercent;\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\n                            contentElementCSS[_strFloat] = 'none';\n\n                        //apply and reset content style\n                        _contentElement.css(contentElementCSS);\n                        contentElementCSS = {};\n\n                        //measure again, but this time all correct sizes:\n                        var contentScrollSize = {\n                            w: MATH.max(contentMeasureElement[LEXICON.sW], contentMeasureElementGuaranty[LEXICON.sW]),\n                            h: MATH.max(contentMeasureElement[LEXICON.sH], contentMeasureElementGuaranty[LEXICON.sH])\n                        };\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n                        _contentScrollSizeCache = contentScrollSize;\n\n                        //remove overflow hidden to restore overflow\n                        if(hideOverflow4CorrectMeasuring)\n                            _contentElement.css(strOverflow, _strEmpty);\n                        \n                        //refresh viewport size after correct measuring\n                        _viewportSize = getViewportSize();\n\n                        hostSize = getHostSize();\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n                        _hostSizeCache = hostSize;\n\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n                        var previousOverflow = _overflowAmountCache;\n                        var overflowBehaviorIsVS = { };\n                        var overflowBehaviorIsVH = { };\n                        var overflowBehaviorIsS = { };\n                        var overflowAmount = { };\n                        var hasOverflow = { };\n                        var hideOverflow = { };\n                        var canScroll = { };\n                        var viewportRect = _paddingElementNative.getBoundingClientRect();\n                        var setOverflowVariables = function(horizontal) {\n                            var scrollbarVars = getScrollbarVars(horizontal);\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                            var xyI = scrollbarVarsInverted._x_y;\n                            var xy = scrollbarVars._x_y;\n                            var wh = scrollbarVars._w_h;\n                            var widthHeight = scrollbarVars._width_height;\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (_viewportElementNative[scrollMax] === 0 && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\n\n                            //hideOverflow:\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\n\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n                        };\n                        setOverflowVariables(true);\n                        setOverflowVariables(false);\n\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n                        _overflowAmountCache = overflowAmount;\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n                        _hasOverflowCache = hasOverflow;\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n                        _hideOverflowCache = hideOverflow;\n\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n                            var borderDesign = 'px solid transparent';\n                            var contentArrangeElementCSS = { };\n                            var arrangeContent = { };\n                            var arrangeChanged = force;\n                            var setContentElementCSS;\n\n                            if (hasOverflow.x || hasOverflow.y) {\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                                _arrangeContentSizeCache = arrangeContent;\n                            }\n\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n                                setContentElementCSS = function(horizontal) {\n                                    var scrollbarVars = getScrollbarVars(horizontal);\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                                    var xy = scrollbarVars._x_y;\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\n                                    }\n                                    else {\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\n                                        contentElementCSS[_strMarginMinus + strDirection] =\n                                        contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                                        arrangeChanged = true;\n                                    }\n                                };\n\n                                if (_nativeScrollbarStyling) {\n                                    if (ignoreOverlayScrollbarHiding) \n                                        removeClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n                                    else\n                                        addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n                                }\n                                else {\n                                    setContentElementCSS(true);\n                                    setContentElementCSS(false);\n                                }\n                            }\n                            if (ignoreOverlayScrollbarHiding) {\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\n                                arrangeChanged = true;\n                            }\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                                if (!_contentArrangeElement) {\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n                                    _viewportElement.prepend(_contentArrangeElement);\n                                }\n                                _contentArrangeElement.css(contentArrangeElementCSS);\n                            }\n                            _contentElement.css(contentElementCSS);\n                        }\n\n                        var viewportElementCSS = {};\n                        var paddingElementCSS = {};\n                        var setViewportCSS;\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n                            viewportElementCSS[isRTLRight] = _strEmpty;\n                            setViewportCSS = function(horizontal) {\n                                var scrollbarVars = getScrollbarVars(horizontal);\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                                var xy = scrollbarVars._x_y;\n                                var XY = scrollbarVars._X_Y;\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                                var reset = function () {\n                                    viewportElementCSS[strDirection] = _strEmpty;\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                                };\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                                        reset();\n                                    }\n                                    else {\n                                        viewportElementCSS[strDirection] =  -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                                    }\n                                } else {\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\n                                    reset();\n                                }\n                            };\n                            setViewportCSS(true);\n                            setViewportCSS(false);\n                            \n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\n                            // because firefox starts hiding scrollbars on too small elements\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n                            if (!_nativeScrollbarStyling \n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n                            }\n                            else {\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\n                                viewportElementCSS[_strMarginMinus + _strTop] =\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] =\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n                            }\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\n                            viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\n\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\n                                //only hide if is Textarea\n                                if (_isTextarea && hideOverflowForceTextarea) {\n                                    paddingElementCSS[strOverflowX] =\n                                    paddingElementCSS[strOverflowY] = strHidden;\n                                }\n                            }\n                            else {\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\n                                    //only un-hide if Textarea\n                                    if (_isTextarea) {\n                                        paddingElementCSS[strOverflowX] =\n                                        paddingElementCSS[strOverflowY] = _strEmpty;\n                                    }\n                                    viewportElementCSS[strOverflowX] =\n                                    viewportElementCSS[strOverflowY] = strVisible;\n                                }\n                            }\n\n                            _paddingElement.css(paddingElementCSS);\n                            _viewportElement.css(viewportElementCSS);\n                            viewportElementCSS = { };\n\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                                var elementStyle = _contentElementNative[LEXICON.s];\n                                var dump;\n                                elementStyle.webkitTransform = 'scale(1)';\n                                elementStyle.display = 'run-in';\n                                dump = _contentElementNative[LEXICON.oH];\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n                                elementStyle.webkitTransform = _strEmpty;\n                            }\n                            /*\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\n                                _hostElement.hide();\n                                var dump = _hostElementNative[LEXICON.oH];\n                                _hostElement.show();\n                            }\n                            */\n                        }\n\n                        //change to direction RTL and width auto Bugfix in Webkit\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n                        contentElementCSS = {};\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n                            if (_isRTL && widthAuto) {\n                                var floatTmp = _contentElement.css(_strFloat);\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n                                _contentElement.css(_strFloat, floatTmp);\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\n                            }\n                            else {\n                                contentElementCSS[_strLeft] = _strEmpty;\n                            }\n                        }\n                        _contentElement.css(contentElementCSS);\n\n                        //handle scroll position\n                        if (_isTextarea && contentSizeChanged) {\n                            var textareaInfo = getTextareaInfo();\n                            if (textareaInfo) {\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                                var cursorRow = textareaInfo._cursorRow;\n                                var cursorCol = textareaInfo._cursorColumn;\n                                var widestRow = textareaInfo._widestRow;\n                                var lastRow = textareaInfo._rows;\n                                var lastCol = textareaInfo._columns;\n                                var cursorPos = textareaInfo._cursorPosition;\n                                var cursorMax = textareaInfo._cursorMax;\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\n                                var textareaScrollAmount = {\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflow !== undefined ? (currScroll.y === previousOverflow.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                                };\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n                            }\n                            _textareaInfoCache = textareaInfo;\n                        }\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\n                            currScroll.x += _contentBorderSize.w || 0;\n                        if(widthAuto)\n                            _hostElement[_strScrollLeft](0);\n                        if(heightAuto)\n                            _hostElement[_strScrollTop](0);\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\n\n                        //scrollbars management:\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n                        var showScrollbarH = COMPATIBILITY.bind(refreshScrollbarAppearance, 0, true, true, canScroll.x);\n                        var showScrollbarV = COMPATIBILITY.bind(refreshScrollbarAppearance, 0, false, true, canScroll.y);\n                        var hideScrollbarH = COMPATIBILITY.bind(refreshScrollbarAppearance, 0, true, false, canScroll.x);\n                        var hideScrollbarV = COMPATIBILITY.bind(refreshScrollbarAppearance, 0, false, false, canScroll.y);\n\n                        //manage class name which indicates scrollable overflow\n                        if (hideOverflow.x || hideOverflow.y)\n                            addClass(_hostElement, _classNameHostOverflow);\n                        else\n                            removeClass(_hostElement, _classNameHostOverflow);\n                        if (hideOverflow.x)\n                            addClass(_hostElement, _classNameHostOverflowX);\n                        else\n                            removeClass(_hostElement, _classNameHostOverflowX);\n                        if (hideOverflow.y)\n                            addClass(_hostElement, _classNameHostOverflowY);\n                        else\n                            removeClass(_hostElement, _classNameHostOverflowY);\n\n                        //add or remove rtl class name for styling purposes\n                        if (cssDirectionChanged) {\n                            if (_isRTL)\n                                addClass(_hostElement, _classNameHostRTL);\n                            else\n                                removeClass(_hostElement, _classNameHostRTL);\n                        }\n\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n                        if (_isBody)\n                            addClass(_hostElement, _classNameHostResizeDisabled);\n                        if (resizeChanged) {\n                            var setupCornerEvents = function(remove) {\n                                if(_supportPassiveEvents)\n                                    setupPassiveEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, _resizeOnMouseTouchDown, remove, true);\n                                else\n                                    _scrollbarCornerElement[remove ? 'off' : 'on'](_strMouseTouchDownEvent, _resizeOnMouseTouchDown);\n                            };\n                            removeClass(_scrollbarCornerElement, [ \n                                    _classNameScrollbarCornerResize,\n                                    _classNameScrollbarCornerResizeB,\n                                    _classNameScrollbarCornerResizeH,\n                                    _classNameScrollbarCornerResizeV].join(_strSpace));\n                            if (_resizeNone) {\n                                addClass(_hostElement, _classNameHostResizeDisabled);\n                                setupCornerEvents(true);\n                            }\n                            else {\n                                removeClass(_hostElement, _classNameHostResizeDisabled);\n                                addClass(_scrollbarCornerElement, _classNameScrollbarCornerResize);\n                                if (_resizeBoth)\n                                    addClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB);\n                                else if (_resizeHorizontal)\n                                    addClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH);\n                                else if (_resizeVertical)\n                                    addClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV);\n\n                                setupCornerEvents(true);\n                                setupCornerEvents();\n                            }\n                        }\n\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n                            if (ignoreOverlayScrollbarHiding) {\n                                if (ignoreOverlayScrollbarHidingChanged) {\n                                    removeClass(_hostElement, _classNameHostScrolling);\n                                    if (ignoreOverlayScrollbarHiding) {\n                                        hideScrollbarH();\n                                        hideScrollbarV();\n                                    }\n                                }\n                            }\n                            else if (scrollbarsVisibilityAuto) {\n                                if (canScroll.x)\n                                    showScrollbarH();\n                                else\n                                    hideScrollbarH();\n\n                                if (canScroll.y)\n                                    showScrollbarV();\n                                else\n                                    hideScrollbarV();\n                            }\n                            else if (scrollbarsVisibilityVisible) {\n                                showScrollbarH();\n                                showScrollbarV();\n                            }\n                            else if (scrollbarsVisibilityHidden) {\n                                hideScrollbarH();\n                                hideScrollbarV();\n                            }\n                        }\n\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n                            if (_scrollbarsAutoHideLeave || _scrollbarsAutoHideMove) {\n                                setupHostMouseTouchEvents(true);\n                                setupHostMouseTouchEvents();\n                            }\n                            else {\n                                setupHostMouseTouchEvents(true);\n                            }\n\n                            if (_scrollbarsAutoHideNever)\n                                refreshScrollbarsAutoHide(true);\n                            else\n                                refreshScrollbarsAutoHide(false, true);\n                        }\n\n                        //manage scrollbars handle length & offset - don't remove!\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n                            refreshScrollbarHandleLength(true);\n                            refreshScrollbarHandleOffset(true);\n                            refreshScrollbarHandleLength(false);\n                            refreshScrollbarHandleOffset(false);\n                        }\n\n                        //manage interactivity\n                        if (scrollbarsClickScrollingChanged)\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n                        if (scrollbarsDragScrollingChanged)\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\n\n                        //callbacks:\n                        if (cssDirectionChanged) {\n                            dispatchCallback(\"onDirectionChanged\", {\n                                isRTL: _isRTL,\n                                dir: cssDirection\n                            });\n                        }\n                        if (hostSizeChanged) {\n                            dispatchCallback(\"onHostSizeChanged\", {\n                                width: _hostSizeCache.w,\n                                height: _hostSizeCache.h\n                            });\n                        }\n                        if (contentSizeChanged) {\n                            dispatchCallback(\"onContentSizeChanged\", {\n                                width: _contentScrollSizeCache.w,\n                                height: _contentScrollSizeCache.h\n                            });\n                        }\n                        if (hasOverflow.c || hideOverflow.c) {\n                            dispatchCallback(\"onOverflowChanged\", {\n                                x: hasOverflow.x,\n                                y: hasOverflow.y,\n                                xScrollable: hideOverflow.xs,\n                                yScrollable: hideOverflow.ys,\n                                clipped: hideOverflow.x || hideOverflow.y\n                            });\n                        }\n                        if (overflowAmount.c) {\n                            dispatchCallback(\"onOverflowAmountChanged\", {\n                                x: overflowAmount.x,\n                                y: overflowAmount.y\n                            });\n                        }\n                    }\n\n                    //fix body min size\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n                        if (!_bodyMinSizeCache.f)\n                            bodyMinSizeChanged();\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n                        _bodyMinSizeCache.c = false;\n                    }\n\n                    //freezeResizeObserver(_sizeObserverElement, false);\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n                    dispatchCallback(\"onUpdated\", { forced: force });\n                }\n\n                \n                //==== Options ====//\n\n                /**\n                 * Sets new options but doesn't call the update method.\n                 * @param newOptions The object which contains the new options.\n                 * @returns {*} A object which contains the changed options.\n                 */\n                function setOptions(newOptions) {\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\n\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n                    \n                    return validatedOpts._prepared;\n                }\n\n\n                //==== Structure ====//\n\n                /**\n                 * Builds or destroys the wrapper and helper DOM elements.\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\n                 */\n                function setupStructureDOM(destroy) {\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n                    var adoptAttrsMap = { };\n                    var applyAdoptedAttrs = function() {\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n                        each(adoptAttrsMap, function(k, v) {\n                            if(type(v) == TYPES.s) {\n                                if(k == LEXICON.c)\n                                    applyAdoptedAttrsElm.addClass(v);\n                                else\n                                    applyAdoptedAttrsElm.attr(k, v);\n                            }\n                        });\n                    };\n                    var hostElementClassNames = [\n                        _classNameHostElement,\n                        _classNameHostTextareaElement,\n                        _classNameHostResizeDisabled,\n                        _classNameHostRTL,\n                        _classNameHostScrollbarHorizontalHidden,\n                        _classNameHostScrollbarVerticalHidden,\n                        _classNameHostTransition,\n                        _classNameHostScrolling,\n                        _classNameHostOverflow,\n                        _classNameHostOverflowX,\n                        _classNameHostOverflowY,\n                        _classNameThemeNone,\n                        _classNameTextareaElement,\n                        _classNameTextInherit,\n                        _classNameCache].join(_strSpace);\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(' ') : adoptAttrs;\n                    if(type(adoptAttrs) == TYPES.a) {\n                        each(adoptAttrs, function(i, v) {\n                            if(type(v) == TYPES.s)\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n                        });\n                    }\n\n                    if(!destroy) {\n                        if (_isTextarea) {\n                            var hostElementCSS = {};\n                            var parent = _targetElement.parent();\n                            _isTextareaHostGenerated = !(parent.hasClass(_classNameHostTextareaElement) && parent.children()[LEXICON.l] === 1);\n\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n                            }\n                            if(_isTextareaHostGenerated)\n                                _targetElement.wrap(generateDiv(_classNameHostTextareaElement));\n\n                            _hostElement = _targetElement.parent();\n                            _hostElement.css(hostElementCSS)\n                                .wrapInner(generateDiv(_classNameContentElement + _strSpace + _classNameTextInherit))\n                                .wrapInner(generateDiv(_classNameViewportElement + _strSpace + _classNameTextInherit))\n                                .wrapInner(generateDiv(_classNamePaddingElement + _strSpace + _classNameTextInherit));\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n                            _textareaCoverElement = FRAMEWORK(generateDiv(_classNameTextareaCoverElement));\n                            _contentElement.prepend(_textareaCoverElement);\n\n                            addClass(_targetElement, _classNameTextareaElement + _strSpace + _classNameTextInherit);\n\n                            if(_isTextareaHostGenerated)\n                                applyAdoptedAttrs();\n                        }\n                        else {\n                            _hostElement = _targetElement;\n                            _hostElement.wrapInner(generateDiv(_classNameContentElement))\n                                .wrapInner(generateDiv(_classNameViewportElement))\n                                .wrapInner(generateDiv(_classNamePaddingElement));\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n                            addClass(_targetElement, _classNameHostElement);\n                        }\n                        \n                        if (_nativeScrollbarStyling)\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n                        if(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n                        if (_isBody)\n                            addClass(_htmlElement, _classNameHTMLElement);\n\n                        _sizeObserverElement = FRAMEWORK(generateDiv('os-resize-observer-host'));\n                        _hostElement.prepend(_sizeObserverElement);\n\n                        _sizeObserverElementNative = _sizeObserverElement[0];\n                        _hostElementNative = _hostElement[0];\n                        _paddingElementNative = _paddingElement[0];\n                        _viewportElementNative = _viewportElement[0];\n                        _contentElementNative = _contentElement[0];\n                    }\n                    else {\n                        _contentElement.contents()\n                            .unwrap()\n                            .unwrap()\n                            .unwrap();\n\n                        removeClass(_hostElement, hostElementClassNames);\n                        if (_isTextarea) {\n                            _targetElement.removeAttr(LEXICON.s);\n\n                            if(_isTextareaHostGenerated)\n                                applyAdoptedAttrs();\n\n                            removeClass(_targetElement, hostElementClassNames);\n                            remove(_textareaCoverElement);\n\n                            if(_isTextareaHostGenerated) {\n                                _targetElement.unwrap();\n                                remove(_hostElement);\n                            }\n                            else {\n                                addClass(_hostElement, _classNameHostTextareaElement);\n                            }\n                        }\n                        else {\n                            removeClass(_targetElement, _classNameHostElement);\n                        }\n\n                        if (_isBody)\n                            removeClass(_htmlElement, _classNameHTMLElement);\n\n                        remove(_sizeObserverElement);\n                    }\n                }\n\n                /**\n                 * Adds or removes all wrapper elements interactivity events.\n                 * @param destroy Indicates whether the Events shall be added or removed.\n                 */\n                function setupStructureEvents(destroy) {\n                    var textareaKeyDownRestrictedKeyCodes = [\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\n                        33, 34,                                                   //page up, page down\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n                    ];\n                    var textareaKeyDownKeyCodesList = [ ];\n                    var textareaUpdateIntervalID;\n                    var scrollStopDelay = 175;\n                    var scrollStopTimeoutId;\n                    var strOnOff = destroy ? 'off' : 'on';\n                    var updateTextarea;\n                    var viewportOnScroll;\n\n                    if(!destroy && _isTextarea) {\n                        _textareaEvents = { };\n                        updateTextarea = function(doClearInterval) {\n                            textareaUpdate();\n                            _base.update(_strAuto);\n                            if(doClearInterval)\n                                clearInterval(textareaUpdateIntervalID);\n                        };\n                        _textareaEvents[_strScroll] = function(event) {\n                            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n                            _targetElement[_strScrollTop](0);\n                            COMPATIBILITY.prvD(event);\n                            COMPATIBILITY.stpP(event);\n                            return false;\n                        };\n                        _textareaEvents['drop'] = function() {\n                            setTimeout(function () {\n                                if(!_destroyed)\n                                    updateTextarea();\n                            }, 50);\n                        };\n                        _textareaEvents['focus'] = function() {\n                            _textareaHasFocus = true;\n                        };\n                        _textareaEvents['focusout'] = function() {\n                            _textareaHasFocus = false;\n                            textareaKeyDownKeyCodesList = [ ];\n                            updateTextarea(true);\n                        };\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                            _textareaEvents['input'] = function textareaOnInput() {\n                                updateTextarea();\n                            }\n                        }\n                        else {\n                            _textareaEvents[_strKeyDownEvent] = function textareaOnKeyDown(event) {\n                                var keyCode = event.keyCode;\n                                if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) > -1)\n                                    return;\n                                if (!textareaKeyDownKeyCodesList.length) {\n                                    updateTextarea();\n                                    textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n                                }\n                                if (inArray(keyCode, textareaKeyDownKeyCodesList) === -1)\n                                    textareaKeyDownKeyCodesList.push(keyCode);\n                            };\n                            _textareaEvents[_strKeyUpEvent] = function(event) {\n                                var keyCode = event.keyCode;\n                                var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n                                if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) > -1)\n                                    return;\n                                if (index > -1)\n                                    textareaKeyDownKeyCodesList.splice(index, 1);\n                                if (!textareaKeyDownKeyCodesList.length)\n                                    updateTextarea(true);\n                            };\n                        }\n                    }\n\n                    if (_isTextarea) {\n                        each(_textareaEvents, function(key, value) {\n                            _targetElement[strOnOff](key, value);\n                        });\n                    }\n                    else {\n                        _contentElement[strOnOff](_strTransitionEndEvent, function (event) {\n                            if (_autoUpdateCache === true)\n                                return;\n                            event = event.originalEvent || event;\n                            if (isSizeAffectingCSSProperty(event.propertyName))\n                                _base.update(_strAuto);\n                        });\n                    }\n\n                    if(!destroy) {\n                        viewportOnScroll = function(event) {\n                            if (!_sleeping) {\n                                if (scrollStopTimeoutId !== undefined)\n                                    clearTimeout(scrollStopTimeoutId);\n                                else {\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\n                                        refreshScrollbarsAutoHide(true);\n\n                                    if (!nativeOverlayScrollbarsAreActive())\n                                        addClass(_hostElement, _classNameHostScrolling);\n\n                                    dispatchCallback(\"onScrollStart\", event);\n                                }\n\n                                //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n                                //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n                                //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n                                if(!_scrollbarsHandlesDefineScrollPos) {\n                                    refreshScrollbarHandleOffset(true);\n                                    refreshScrollbarHandleOffset(false);\n                                }\n                                dispatchCallback(\"onScroll\", event);\n\n                                scrollStopTimeoutId = setTimeout(function () {\n                                    if(!_destroyed) {\n                                        //OnScrollStop:\n                                        clearTimeout(scrollStopTimeoutId);\n                                        scrollStopTimeoutId = undefined;\n\n                                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\n                                            refreshScrollbarsAutoHide(false);\n\n                                        if (!nativeOverlayScrollbarsAreActive())\n                                            removeClass(_hostElement, _classNameHostScrolling);\n\n                                        dispatchCallback(\"onScrollStop\", event);\n                                    }\n                                }, scrollStopDelay);\n                            }\n                        };\n\n                        if (_supportPassiveEvents)\n                            setupPassiveEventListener(_viewportElement, _strScroll, viewportOnScroll);\n                        else\n                            _viewportElement.on(_strScroll, viewportOnScroll);\n                    }\n                }\n\n\n\n                //==== Scrollbars ====//\n\n                /**\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\n                 */\n                function setupScrollbarsDOM(destroy) {\n                    if(!destroy) {\n                        _scrollbarHorizontalElement = FRAMEWORK(generateDiv(_classNameScrollbar + _strSpace + _classNameScrollbarHorizontal));\n                        _scrollbarHorizontalTrackElement = FRAMEWORK(generateDiv(_classNameScrollbarTrack));\n                        _scrollbarHorizontalHandleElement = FRAMEWORK(generateDiv(_classNameScrollbarHandle));\n                        _scrollbarVerticalElement = FRAMEWORK(generateDiv(_classNameScrollbar + _strSpace + _classNameScrollbarVertical));\n                        _scrollbarVerticalTrackElement = FRAMEWORK(generateDiv(_classNameScrollbarTrack));\n                        _scrollbarVerticalHandleElement = FRAMEWORK(generateDiv(_classNameScrollbarHandle));\n\n                        _scrollbarHorizontalElement.append(_scrollbarHorizontalTrackElement);\n                        _scrollbarHorizontalTrackElement.append(_scrollbarHorizontalHandleElement);\n                        _scrollbarVerticalElement.append(_scrollbarVerticalTrackElement);\n                        _scrollbarVerticalTrackElement.append(_scrollbarVerticalHandleElement);\n\n                        _paddingElement.after(_scrollbarVerticalElement);\n                        _paddingElement.after(_scrollbarHorizontalElement);\n                    }\n                    else {\n                        remove(_scrollbarHorizontalElement);\n                        remove(_scrollbarVerticalElement);\n                    }\n                }\n\n                /**\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\n                 */\n                function setupScrollbarEvents(isHorizontal) {\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\n                    var scrollbarVarsInfo = scrollbarVars._info;\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\n                    var xy = scrollbarVars._x_y;\n                    var XY = scrollbarVars._X_Y;\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\n                    var strActive = 'active';\n                    var strSnapHandle = 'snapHandle';\n                    var scrollDurationFactor = 1;\n                    var increaseDecreaseScrollAmountKeyCodes = [ 16, 17 ]; //shift, ctrl\n                    var trackTimeout;\n                    var mouseDownScroll;\n                    var mouseDownOffset;\n                    var mouseDownInvertedScale;\n                    \n                    function setupEvent(element, eventNames, listener) {\n                        var collected = type(eventNames) == TYPES.a && type(listener) == TYPES.a;\n                        var i = 0;\n                        \n                        if(collected) {\n                            for (; i < eventNames[LEXICON.l]; i++)\n                                setupEvent(element, eventNames[i], listener[i]);\n                        }\n                        else {\n                            if(_supportPassiveEvents)\n                                setupPassiveEventListener(element, eventNames, listener, false, true);\n                            else\n                                element.on(eventNames, listener);\n                        }\n                    }\n                    function getPointerPosition(event) {\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n                    }\n                    function getPreparedScrollbarsOption(name) {\n                        return _currentPreparedOptions.scrollbars[name];\n                    }\n                    function increaseTrackScrollAmount() {\n                        scrollDurationFactor = 0.5;\n                    }\n                    function decreaseTrackScrollAmount() {\n                        scrollDurationFactor = 1;\n                    }\n                    function documentKeyDown(event) {\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\n                            increaseTrackScrollAmount();\n                    }\n                    function documentKeyUp(event) {\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\n                            decreaseTrackScrollAmount();\n                    }\n                    function onMouseTouchDownContinue(event) {\n                        var originalEvent = event.originalEvent || event;\n                        var isTouchEvent = originalEvent.touches !== undefined;\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n                    }\n                    function documentDragMove(event) {\n                        if(onMouseTouchDownContinue(event)) {\n                            var trackLength = scrollbarVarsInfo._trackLength;\n                            var handleLength = scrollbarVarsInfo._handleLength;\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\n                                scrollDelta *= -1;\n\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n                            if(_scrollbarsHandlesDefineScrollPos)\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n\n                            if (!_supportPassiveEvents)\n                                COMPATIBILITY.prvD(event);\n                        }\n                        else\n                            documentMouseTouchUp(event);\n                    }\n                    function documentMouseTouchUp(event) {\n                        event = event || event.originalEvent;\n\n                        _documentElement.off(_strMouseTouchMoveEvent, documentDragMove)\n                            .off(_strMouseTouchUpEvent, documentMouseTouchUp)\n                            .off(_strKeyDownEvent, documentKeyDown)\n                            .off(_strKeyUpEvent, documentKeyUp)\n                            .off(_strSelectStartEvent, documentOnSelectStart);\n\n                        if(_scrollbarsHandlesDefineScrollPos)\n                            refreshScrollbarHandleOffset(isHorizontal, true);\n\n                        _scrollbarsHandlesDefineScrollPos = false;\n                        removeClass(_bodyElement, _classNameDragging);\n                        removeClass(scrollbarVars._handle, strActive);\n                        removeClass(scrollbarVars._track, strActive);\n                        removeClass(scrollbarVars._scrollbar, strActive);\n\n                        mouseDownScroll = undefined;\n                        mouseDownOffset = undefined;\n                        mouseDownInvertedScale = 1;\n\n                        decreaseTrackScrollAmount();\n\n                        if (trackTimeout !== undefined) {\n                            _base.scrollStop();\n                            clearTimeout(trackTimeout);\n                            trackTimeout = undefined;\n                        }\n\n                        if(event) {\n                            var rect = _hostElementNative.getBoundingClientRect();\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\n\n                            //if mouse is outside host element\n                            if (!mouseInsideHost)\n                                hostOnMouseLeave();\n\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\n                                refreshScrollbarsAutoHide(false);\n                        }\n                    }\n                    function onHandleMouseTouchDown(event) {\n                        if (onMouseTouchDownContinue(event))\n                            onHandleMouseTouchDownAction(event);\n                    }\n                    function onHandleMouseTouchDownAction(event) {\n                        mouseDownScroll = _viewportElement[scroll]();\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n                        mouseDownOffset = getPointerPosition(event);\n\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n                        addClass(_bodyElement, _classNameDragging);\n                        addClass(scrollbarVars._handle, strActive);\n                        addClass(scrollbarVars._scrollbar, strActive);\n\n                        _documentElement.on(_strMouseTouchMoveEvent, documentDragMove)\n                            .on(_strMouseTouchUpEvent, documentMouseTouchUp)\n                            .on(_strSelectStartEvent, documentOnSelectStart);\n\n                        if(_msieVersion || !_documentMixed)\n                            COMPATIBILITY.prvD(event);\n                        COMPATIBILITY.stpP(event);\n                    }\n                    function onTrackMouseTouchDown(event) {\n                        if (onMouseTouchDownContinue(event)) {\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h]);\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n                            var ctrlKey = event.ctrlKey;\n                            var instantScroll = event.shiftKey;\n                            var instantScrollTransition = instantScroll && ctrlKey;\n                            var isFirstIteration = true;\n                            var easing = 'linear';\n                            var decreaseScroll;\n                            var finishedCondition;\n                            var scrollActionFinsished = function(transition) {\n                                if(_scrollbarsHandlesDefineScrollPos)\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\n                            };\n                            var scrollActionInstantFinished = function() {\n                                scrollActionFinsished();\n                                onHandleMouseTouchDownAction(event);\n                            };\n                            var scrollAction = function () {\n                                if(!_destroyed) {\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\n                                    var trackLength = scrollbarVarsInfo._trackLength;\n                                    var handleLength = scrollbarVarsInfo._handleLength;\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\n                                    var scrollDuration = 270 * scrollDurationFactor;\n                                    var timeoutDelay = isFirstIteration ? MATH.max(400, scrollDuration) : scrollDuration;\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                                    var scrollObj = { };\n                                    var animationObj = {\n                                        easing : easing,\n                                        step : function(now) {\n                                            if(_scrollbarsHandlesDefineScrollPos) {\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\n                                            }\n                                        }\n                                    };\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\n\n                                    //_base.scrollStop();\n\n                                    if(instantScroll) {\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n                                        if(instantScrollTransition) {\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                                            //and the animation stops at the correct point\n                                            instantScrollPosition = _viewportElement[scroll]();\n                                            //scroll back to the position before instant scrolling so animation can be performed\n                                            _viewportElement[scroll](currScroll);\n\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n\n                                            scrollObj[xy] = instantScrollPosition;\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\n                                                duration : 130,\n                                                complete : scrollActionInstantFinished\n                                            }));\n                                        }\n                                        else\n                                            scrollActionInstantFinished();\n                                    }\n                                    else {\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                                        finishedCondition = rtlIsNormal\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\n\n                                        if (finishedCondition) {\n                                            clearTimeout(trackTimeout);\n                                            _base.scrollStop();\n                                            trackTimeout = undefined;\n                                            scrollActionFinsished(true);\n                                        }\n                                        else {\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\n\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\n                                                duration: scrollDuration\n                                            }));\n                                        }\n                                        isFirstIteration = false;\n                                    }\n                                }\n                            };\n                            if (ctrlKey)\n                                increaseTrackScrollAmount();\n\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\n\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n                            addClass(_bodyElement, _classNameDragging);\n                            addClass(scrollbarVars._track, strActive);\n                            addClass(scrollbarVars._scrollbar, strActive);\n\n                            _documentElement.on(_strMouseTouchUpEvent, documentMouseTouchUp)\n                                .on(_strKeyDownEvent, documentKeyDown)\n                                .on(_strKeyUpEvent, documentKeyUp)\n                                .on(_strSelectStartEvent, documentOnSelectStart);\n\n                            scrollAction();\n                            COMPATIBILITY.prvD(event);\n                            COMPATIBILITY.stpP(event);\n                        }\n                    }\n                    function onTrackMouseTouchEnter(event) {\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n                        _scrollbarsHandleHovered = true;\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\n                            refreshScrollbarsAutoHide(true);\n                    }\n                    function onTrackMouseTouchLeave(event) {\n                        _scrollbarsHandleHovered = false;\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\n                            refreshScrollbarsAutoHide(false);\n                    }\n                    function onScrollbarMouseTouchDown(event) {\n                        COMPATIBILITY.stpP(event);\n                    }\n                    \n                    setupEvent(scrollbarVars._handle, \n                        _strMouseTouchDownEvent, \n                        onHandleMouseTouchDown);\n                    setupEvent(scrollbarVars._track,\n                        [_strMouseTouchDownEvent, _strMouseTouchEnter, _strMouseTouchLeave], \n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n                    setupEvent(scrollbarVars._scrollbar, \n                        _strMouseTouchDownEvent, \n                        onScrollbarMouseTouchDown);\n\n                    if (_supportTransition) {\n                        scrollbarVars._scrollbar.on(_strTransitionEndEvent, function(event) {\n                            if (event.target !== scrollbarVars._scrollbar[0])\n                                return;\n                            refreshScrollbarHandleLength(isHorizontal);\n                            refreshScrollbarHandleOffset(isHorizontal);\n                        });\n                    }\n                }\n\n                /**\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\n                 */\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n                    var scrollbarClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n\n                    if (shallBeVisible)\n                        removeClass(_hostElement, scrollbarClassName);\n                    else\n                        addClass(_hostElement, scrollbarClassName);\n\n                    if (canScroll)\n                        removeClass(scrollbarElement, _classNameScrollbarUnusable);\n                    else\n                        addClass(scrollbarElement, _classNameScrollbarUnusable);\n                }\n\n                /**\n                 * Autoshows / autohides both scrollbars with.\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\n                 */\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\n                    if (shallBeVisible) {\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n                    }\n                    else {\n                        var anyActive;\n                        var strActive = 'active';\n                        var hide = function () {\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n                            }\n                        };\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\n                        else\n                            hide();\n                    }\n                }\n\n                /**\n                 * Refreshes the handle length of the given scrollbar.\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\n                 */\n                function refreshScrollbarHandleLength(isHorizontal) {\n                    var handleCSS = {};\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\n                    var scrollbarVarsInfo = scrollbarVars._info;\n                    var digit = 1000000;\n                    //get and apply intended handle length\n                    var handleRatio = MATH.min(1, (_hostSizeCache[scrollbarVars._w_h] - (_paddingAbsoluteCache ? (isHorizontal ? _paddingX : _paddingY) : 0)) / _contentScrollSizeCache[scrollbarVars._w_h]);\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + \"%\"; //the last * digit / digit is for flooring to the 4th digit\n\n                    if (!nativeOverlayScrollbarsAreActive())\n                        scrollbarVars._handle.css(handleCSS);\n\n                    //measure the handle length to respect min & max length\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\n                }\n\n                /**\n                 * Refreshes the handle offset of the given scrollbar.\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\n                 */\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n                    var transition = type(scrollOrTransition) == TYPES.b;\n                    var transitionDuration = 250;\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\n                    var scrollbarVarsInfo = scrollbarVars._info;\n                    var strTranslateBrace = 'translate(';\n                    var strTransform = VENDORS._cssProperty('transform');\n                    var strTransition = VENDORS._cssProperty('transition');\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\n\n                    //measure the handle length to respect min & max length\n                    var handleLength = scrollbarVarsInfo._handleLength;\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n                    var handleTrackDiff = trackLength - handleLength;\n                    var handleCSS = {};\n                    var transformOffset;\n                    var translateValue;\n\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n                    // because its a bit behind during the small delay when content size updates\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n                    var getScrollRatio = function(base) {\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n                    };\n                    var getHandleOffset = function(scrollRatio) {\n                        var offset = handleTrackDiff * scrollRatio;\n                        offset = isNaN(offset) ? 0 : offset;\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\n                        offset = MATH.max(0, offset);\n                        return offset;\n                    };\n                    var scrollRatio = getScrollRatio(nativeScroll);\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\n\n                    scrollbarVarsInfo._maxScroll = maxScroll;\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n                    if (_supportTransform) {\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n\n                        handleCSS[strTransform] = translateValue;\n\n                        //apply or clear up transition\n                        if(_supportTransition)\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' +  (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n                    }\n                    else\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\n\n\n                    //only apply css if offset has changed and overflow exists.\n                    if (!nativeOverlayScrollbarsAreActive()) {\n                        scrollbarVars._handle.css(handleCSS);\n\n                        //clear up transition\n                        if(_supportTransform && _supportTransition && transition) {\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function() {\n                                if(!_destroyed)\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\n                            });\n                        }\n                    }\n\n                    scrollbarVarsInfo._handleOffset = handleOffset;\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n                    scrollbarVarsInfo._trackLength = trackLength;\n                }\n\n                /**\n                 * Refreshes the interactivity of the given scrollbar element.\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\n                 * @param value True for interactivity false for no interactivity.\n                 */\n                function refreshScrollbarsInteractive(isTrack, value) {\n                    var action = value ? 'removeClass' : 'addClass';\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n\n                    element1[action](className);\n                    element2[action](className);\n                }\n\n                /**\n                 * Returns a object which is used for fast access for specific variables.\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\n                 */\n                function getScrollbarVars(isHorizontal) {\n                    return {\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\n                        _left_top: isHorizontal ? _strLeft : _strTop,\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\n                        _x_y: isHorizontal ? _strX : _strY,\n                        _X_Y: isHorizontal ? 'X' : 'Y',\n                        _w_h: isHorizontal ? 'w' : 'h',\n                        _l_t: isHorizontal ? 'l' : 't',\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n                    };\n                }\n\n\n                //==== Scrollbar Corner ====//\n\n                /**\n                 * Builds or destroys the scrollbar corner DOM element.\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\n                 */\n                function setupScrollbarCornerDOM(destroy) {\n                    if(!destroy) {\n                         _scrollbarCornerElement = FRAMEWORK(generateDiv(_classNameScrollbarCorner));\n                        _hostElement.append(_scrollbarCornerElement);\n                    }\n                    else {\n                        remove(_scrollbarCornerElement);\n                    }\n                 }\n\n                /**\n                 * Initializes all scrollbar corner interactivity events.\n                 */\n                function setupScrollbarCornerEvents() {\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\n                    var mouseDownPosition = { };\n                    var mouseDownSize = { };\n                    var mouseDownInvertedScale = { };\n\n                    _resizeOnMouseTouchDown = function(event) {\n                        if (onMouseTouchDownContinue(event)) {\n                            if (_mutationObserversConnected) {\n                                _resizeReconnectMutationObserver = true;\n                                disconnectMutationObservers();\n                            }\n\n                            mouseDownPosition = getCoordinates(event);\n\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n                            mouseDownInvertedScale = getHostElementInvertedScale();\n\n                            _documentElement.on(_strSelectStartEvent, documentOnSelectStart)\n                                .on(_strMouseTouchMoveEvent, documentDragMove)\n                                .on(_strMouseTouchUpEvent, documentMouseTouchUp);\n\n                            addClass(_bodyElement, _classNameDragging);\n                            if (_scrollbarCornerElement.setCapture)\n                                _scrollbarCornerElement.setCapture();\n\n                            COMPATIBILITY.prvD(event);\n                            COMPATIBILITY.stpP(event);\n                        }\n                    };\n                    function documentDragMove(event) {\n                        if (onMouseTouchDownContinue(event)) {\n                            var pageOffset = getCoordinates(event);\n                            var hostElementCSS = { };\n                            if (_resizeHorizontal || _resizeBoth)\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\n                            if (_resizeVertical || _resizeBoth)\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\n                            _hostElement.css(hostElementCSS);\n                            COMPATIBILITY.stpP(event);\n                        }\n                        else {\n                            documentMouseTouchUp(event);\n                        }\n                    }\n                    function documentMouseTouchUp(event) {\n                        var eventIsTrusted = event !== undefined;\n\n                        _documentElement.off(_strSelectStartEvent, documentOnSelectStart)\n                            .off(_strMouseTouchMoveEvent, documentDragMove)\n                            .off(_strMouseTouchUpEvent, documentMouseTouchUp);\n\n                        removeClass(_bodyElement, _classNameDragging);\n                        if (_scrollbarCornerElement.releaseCapture)\n                            _scrollbarCornerElement.releaseCapture();\n\n                        if (eventIsTrusted) {\n                            if (_resizeReconnectMutationObserver)\n                                connectMutationObservers();\n                            _base.update(_strAuto);\n                        }\n                        _resizeReconnectMutationObserver = false;\n                    }\n                    function onMouseTouchDownContinue(event) {\n                        var originalEvent = event.originalEvent || event;\n                        var isTouchEvent = originalEvent.touches !== undefined;\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n                    }\n                    function getCoordinates(event) {\n                        return _msieVersion && insideIFrame ? { x : event.screenX , y : event.screenY } : COMPATIBILITY.page(event);\n                    }\n                }\n\n\n                //==== Utils ====//\n\n                /**\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\n                 * @param name The name of the target which shall be called.\n                 * @param args The args with which the callback shall be called.\n                 */\n                function dispatchCallback(name, args) {\n                    if(_initialized) {\n                        var callback = _currentPreparedOptions.callbacks[name];\n                        var extensionOnName = name;\n                        var ext;\n\n                        if(extensionOnName.substr(0, 2) === 'on')\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n\n                        if(type(callback) == TYPES.f)\n                            callback.call(_base, args);\n\n                        each(_extensions, function() {\n                            ext = this;\n                            if(type(ext.on) == TYPES.f)\n                                ext.on(extensionOnName, args);\n                        });\n                    }\n                    else if(!_destroyed)\n                        _callbacksInitQeueue.push({ n : name, a : args });\n                }\n\n                /**\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\n                 * @param targetCSSObject The css object to which the values shall be applied.\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\n                 */\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n                    if (values === undefined)\n                        values = [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n\n                    targetCSSObject[prefix + _strTop] = values[0];\n                    targetCSSObject[prefix + _strRight] = values[1];\n                    targetCSSObject[prefix + _strBottom] = values[2];\n                    targetCSSObject[prefix + _strLeft] = values[3];\n                }\n\n                /**\n                 * Returns the computed CSS transition string from the given element.\n                 * @param element The element from which the transition string shall be returned.\n                 * @returns {string} The CSS transition string from the given element.\n                 */\n                function getCSSTransitionString(element) {\n                    var transitionStr = VENDORS._cssProperty('transition');\n                    var assembledValue = element.css(transitionStr);\n                    if(assembledValue)\n                        return assembledValue;\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n                    var regExpMain = new RegExp(regExpString);\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n                    var properties = 'property duration timing-function delay'.split(' ');\n                    var result = [ ];\n                    var strResult;\n                    var valueArray;\n                    var i = 0;\n                    var j;\n                    var splitCssStyleByComma = function(str) {\n                        strResult = [ ];\n                        if (!str.match(regExpValidate))\n                            return str;\n                        while (str.match(regExpMain)) {\n                            strResult.push(RegExp.$1);\n                            str = str.replace(regExpMain, _strEmpty);\n                        }\n\n                        return strResult;\n                    };\n                    for (; i < properties[LEXICON.l]; i++) {\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n                    }\n                    return result.join(', ');\n                }\n\n                /**\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\n                 * @returns {{x: number, y: number}} The scale of the host-element.\n                 */\n                function getHostElementInvertedScale() {\n                    var rect = _paddingElementNative.getBoundingClientRect();\n                    return {\n                        x :  _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n                        y :  _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n                    };\n                }\n\n                /**\n                 * Checks whether the given object is a HTMLElement.\n                 * @param o The object which shall be checked.\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\n                 */\n                function isHTMLElement(o) {\n                    var strOwnerDocument = 'ownerDocument';\n                    var strHTMLElement = 'HTMLElement';\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\n                    return (\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n                        o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\n                    );\n                }\n\n                /**\n                 * Compares 2 arrays and returns the differences between them as a array.\n                 * @param a1 The first array which shall be compared.\n                 * @param a2 The second array which shall be compared.\n                 * @returns {Array} The differences between the two arrays.\n                 */\n                function getArrayDifferences(a1, a2) {\n                    var a = [ ];\n                    var diff = [ ];\n                    var i;\n                    var k;\n                    for (i = 0; i < a1.length; i++)\n                        a[a1[i]] = true;\n                    for (i = 0; i < a2.length; i++) {\n                        if (a[a2[i]])\n                            delete a[a2[i]];\n                        else\n                            a[a2[i]] = true;\n                    }\n                    for (k in a)\n                        diff.push(k);\n                    return diff;\n                }\n\n                /**\n                 * Returns Zero or the number to which the value can be parsed.\n                 * @param value The value which shall be parsed.\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\n                 */\n                function parseToZeroOrNumber(value, toFloat) {\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n                    return isNaN(num) ? 0 : num;\n                }\n\n                /**\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\n                 */\n                function getTextareaInfo() {\n                    //read needed values\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\n                    if (textareaCursorPosition === undefined)\n                        return;\n\n                    var textareaValue = _targetElement.val();\n                    var textareaLength = textareaValue[LEXICON.l];\n                    var textareaRowSplit = textareaValue.split('\\n');\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n                    var widestRow = 0;\n                    var textareaLastCol = 0;\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n                    var rowCols;\n                    var i;\n\n                    //get widest Row and the last column of the textarea\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n                        rowCols = textareaRowSplit[i][LEXICON.l];\n                        if (rowCols > textareaLastCol) {\n                            widestRow = i + 1;\n                            textareaLastCol = rowCols;\n                        }\n                    }\n\n                    return {\n                        _cursorRow: cursorRow, //cursorRow\n                        _cursorColumn: cursorCol, //cursorCol\n                        _rows: textareaLastRow, //rows\n                        _columns: textareaLastCol, //cols\n                        _widestRow: widestRow, //wRow\n                        _cursorPosition: textareaCursorPosition, //pos\n                        _cursorMax: textareaLength //max\n                    };\n                }\n\n                /**\n                 * Determines whether native overlay scrollbars are active.\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\n                 */\n                function nativeOverlayScrollbarsAreActive() {\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\n                }\n\n                /**\n                 * Gets the element which is used to measure the content size.\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\n                 */\n                function getContentMeasureElement() {\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n                }\n\n                /**\n                 * Generates a string which represents a HTML div with the given classes or attributes.\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\n                 * @param content The content of the div as string.\n                 * @returns {string} The concated string which represents a HTML div and its content.\n                 */\n                function generateDiv(classesOrAttrs, content) {\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\n                        'class=\"' + classesOrAttrs + '\"' :\n                            (function() {\n                                var key;\n                                var attrs = '';\n                                if(FRAMEWORK.isPlainObject(classesOrAttrs)) {\n                                    for (key in classesOrAttrs)\n                                        attrs += (key === 'className' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n                                }\n                                return attrs;\n                            })() :\n                            _strEmpty) +\n                        '>' +\n                        (content ? content : _strEmpty) +\n                        '</div>';\n                }\n\n                /**\n                 * Gets the value of the given property from the given object.\n                 * @param obj The object from which the property value shall be got.\n                 * @param path The property of which the value shall be got.\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\n                 */\n                function getObjectPropVal(obj, path) {\n                    var splits = path.split(_strDot);\n                    var i = 0;\n                    var val;\n                    for(; i < splits.length; i++) {\n                        if(!obj[LEXICON.hOP](splits[i]))\n                            return;\n                        val = obj[splits[i]];\n                        if(i < splits.length && type(val) == TYPES.o)\n                            obj = val;\n                    }\n                    return val;\n                }\n\n                /**\n                 * Sets the value of the given property from the given object.\n                 * @param obj The object from which the property value shall be set.\n                 * @param path The property of which the value shall be set.\n                 * @param val The value of the property which shall be set.\n                 */\n                function setObjectPropVal(obj, path, val) {\n                    var splits = path.split(_strDot);\n                    var splitsLength = splits.length;\n                    var i = 0;\n                    var extendObj = { };\n                    var extendObjRoot = extendObj;\n                    for(; i < splitsLength; i++)\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? { } : val;\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\n                }\n\n\n                //==== Utils Cache ====//\n\n                /**\n                 * Compares two values or objects and returns true if they aren't equal.\n                 * @param current The first value or object which shall be compared.\n                 * @param cache The second value or object which shall be compared.\n                 * @param force If true the returned value is always true.\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\n                 */\n                function checkCache(current, cache, force) {\n                    if (force)\n                        return force;\n                    if(type(current) == TYPES.o && type(cache) == TYPES.o) {\n                        for (var prop in current) {\n                            if(prop !== 'c') {\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                                    if(checkCache(current[prop], cache[prop]))\n                                        return true;\n                                }\n                                else {\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        return current !== cache;\n                    }\n                    return false;\n                }\n\n\n                //==== Shortcuts ====//\n\n                /**\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\n                 */\n                function extendDeep() {\n                    return FRAMEWORK.extend.apply(this, [ true ].concat([].slice.call(arguments)));\n                }\n\n                /**\n                 * jQuery addClass method shortcut.\n                 */\n                function addClass(el, classes) {\n                    return _frameworkProto.addClass.call(el, classes);\n                }\n\n                /**\n                 * jQuery removeClass method shortcut.\n                 */\n                function removeClass(el, classes) {\n                    return _frameworkProto.removeClass.call(el, classes);\n                }\n\n                /**\n                 * jQuery remove method shortcut.\n                 */\n                function remove(el) {\n                    return _frameworkProto.remove.call(el);\n                }\n\n                /**\n                 * Finds the first child element with the given selector of the given element.\n                 * @param el The root element from which the selector shall be valid.\n                 * @param selector The selector of the searched element.\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\n                 */\n                function findFirst(el, selector) {\n                    return _frameworkProto.find.call(el, selector).eq(0);\n                }\n\n\n                //==== API ====//\n\n                /**\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\n                 * This behavior can be reset by calling the update method.\n                 */\n                _base.sleep = function () {\n                    _sleeping = true;\n                };\n\n                /**\n                 * Updates the plugin and DOM to the current options.\n                 * This method should only be called if a update is 100% required.\n                 * @param force True if every property shall be updated and the cache shall be ignored.\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\n                 * @returns {boolean|undefined} \n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\n                 * undefined otherwise.\n                 */\n                _base.update = function (force) {\n                    var attrsChanged;\n                    var contentSizeC;\n                    var isString = type(force) == TYPES.s;\n                    var imgElementSelector = 'img';\n                    var imgElementLoadEvent = 'load';\n                    var doUpdateAuto;\n                    var mutHost;\n                    var mutContent;\n                    if(isString) {\n                        if (force === _strAuto) {\n                            attrsChanged = meaningfulAttrsChanged();\n                            contentSizeC = updateAutoContentSizeChanged();\n                            doUpdateAuto = attrsChanged || contentSizeC;\n                            if (doUpdateAuto) {\n                                update({\n                                    _contentSizeChanged : contentSizeC,\n                                    _changedOptions : _initialized ? undefined : _currentPreparedOptions\n                                });\n                            }\n                        }\n                        else if (force === _strSync) {\n                            if(_mutationObserversConnected) {\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n                            }\n                            else {\n                                mutHost = _base.update(_strAuto);\n                            }\n                        }\n                        else if (force === 'zoom') {\n                            update({\n                                _hostSizeChanged : true,\n                                _contentSizeChanged : true\n                            });\n                        }\n                    }\n                    else {\n                        force = _sleeping || force;\n                        _sleeping = false;\n                        if(!_base.update(_strSync) || force)\n                            update({ _force : force });\n                    }\n                    if(!_isTextarea) {\n                        _contentElement.find(imgElementSelector).each(function(i, el) {\n                            var index = COMPATIBILITY.inA(el, _imgs);\n                            if (index === -1)\n                                FRAMEWORK(el).off(imgElementLoadEvent, imgOnLoad).on(imgElementLoadEvent, imgOnLoad);\n                        });\n                    }\n                    return doUpdateAuto || mutHost || mutContent;\n                };\n\n                /**\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\n                 * @returns {*}\n                 */\n                _base.options = function (newOptions, value) {\n                    var option = { };\n                    var changedOps;\n                    \n                    //return current options if newOptions are undefined or empty\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n                        if (type(newOptions) == TYPES.s) {\n                            if (arguments.length > 1) {\n                                setObjectPropVal(option, newOptions, value);\n                                changedOps = setOptions(option);\n                            }\n                            else\n                                return getObjectPropVal(_currentOptions, newOptions);\n                        }\n                        else\n                            return _currentOptions;\n                    }\n                    else {\n                        changedOps = setOptions(newOptions);\n                    }\n                    \n                    if(!FRAMEWORK.isEmptyObject(changedOps)) {\n                        update({ _changedOptions : changedOps });\n                    }    \n                };\n\n                /**\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\n                 */\n                _base.destroy = function () {\n                    //remove this instance from auto update loop\n                    autoUpdateLoop.remove(_base);\n\n                    //disconnect all mutation observers\n                    disconnectMutationObservers();\n\n                    //remove all resize observers\n                    setupResizeObserver(_sizeObserverElement);\n                    setupResizeObserver(_sizeAutoObserverElement);\n\n                    //remove all extensions\n                    for(var extName in _extensions)\n                        _base.removeExt(extName);\n\n                    //remove all events from host element\n                    setupHostMouseTouchEvents(true);\n\n                    //remove all events from structure\n                    setupStructureEvents(true);\n\n                    //remove all helper / detection elements\n                    if (_contentGlueElement)\n                        remove(_contentGlueElement);\n                    if (_contentArrangeElement)\n                        remove(_contentArrangeElement);\n                    if (_sizeAutoObserverAdded)\n                        remove(_sizeAutoObserverElement);\n\n                    //remove all generated DOM\n                    setupScrollbarsDOM(true);\n                    setupScrollbarCornerDOM(true);\n                    setupStructureDOM(true);\n\n                    //remove all generated image load events\n                    for(var i = 0; i < _imgs[LEXICON.l]; i++)\n                        FRAMEWORK(_imgs[i]).off('load', imgOnLoad);\n                    _imgs = undefined;\n\n                    _destroyed = true;\n                    _sleeping = true;\n\n                    //remove this instance from the instances list\n                    INSTANCES(pluginTargetElement, 0);\n                    dispatchCallback(\"onDestroyed\");\n\n                    //remove all properties and methods\n                    //for (var property in _base)\n                    //    delete _base[property];\n                    //_base = undefined;\n                };\n\n                /**\n                 * Scrolls to a given position or element.\n                 * @param coordinates\n                 * 1. Can be \"coordinates\" which looks like:\n                 *    { x : ?, y : ? } OR          Object with x and y properties\n                 *    { left : ?, top : ? } OR     Object with left and top properties\n                 *    { l : ?, t : ? } OR          Object with l and t properties\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\n                 *    ?                            A single value which stays for both axis\n                 *    A value can be a number, a string or a calculation.\n                 *\n                 *    Operators:\n                 *    [NONE]  The current scroll will be overwritten by the value.\n                 *    '+='    The value will be added to the current scroll offset\n                 *    '-='    The value will be subtracted from the current scroll offset\n                 *    '*='    The current scroll wil be multiplicated by the value.\n                 *    '/='    The current scroll wil be divided by the value.\n                 *\n                 *    Units:\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\n                 *    'px'    Same as none\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\n                 *\n                 *    example final values:\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\n                 *\n                 * 2. Can be a HTML or jQuery element:\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\n                 *\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\n                 *    {\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\n                 *      scroll : [string, array, object],               Default value is 'always'.\n                 *      block : [string, array, object],                Default value is 'begin'.\n                 *      margin : [number, boolean, array, object]       Default value is false.\n                 *    }\n                 *\n                 *    Possible scroll settings are:\n                 *    'always'      Scrolls always.\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\n                 *    'never'       Scrolls never.\n                 *\n                 *    Possible block settings are:\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\n                 *    'nearest' The element will be docked to the nearest edge(s).\n                 *\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\n                 *    [NUMBER]                                          The margin will be used for all edges.\n                 *\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\n                 * @param easing The animation easing.\n                 * @param complete The animation complete callback.\n                 * @returns {{\n                 *   position: {x: number, y: number},\n                 *   ratio: {x: number, y: number},\n                 *   max: {x: number, y: number},\n                 *   handleOffset: {x: number, y: number},\n                 *   handleLength: {x: number, y: number},\n                 *   handleLengthRatio: {x: number, y: number}, t\n                 *   rackLength: {x: number, y: number},\n                 *   isRTL: boolean,\n                 *   isRTLNormalized: boolean\n                 *  }}\n                 */\n                _base.scroll = function (coordinates, duration, easing, complete) {\n                    if (arguments.length === 0 || coordinates === undefined) {\n                        var infoX = _scrollHorizontalInfo;\n                        var infoY = _scrollVerticalInfo;\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n                        var scrollX = infoX._currentScroll;\n                        var scrollXRatio = infoX._currentScrollRatio;\n                        var maxScrollX = infoX._maxScroll;\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n                        scrollX *= normalizeNegate ? -1 : 1;\n                        maxScrollX *= normalizeNegate ? -1 : 1;\n\n                        return {\n                            position : {\n                                x : scrollX,\n                                y : infoY._currentScroll\n                            },\n                            ratio : {\n                                x : scrollXRatio,\n                                y : infoY._currentScrollRatio\n                            },\n                            max : {\n                                x : maxScrollX,\n                                y : infoY._maxScroll\n                            },\n                            handleOffset : {\n                                x : infoX._handleOffset,\n                                y : infoY._handleOffset\n                            },\n                            handleLength : {\n                                x : infoX._handleLength,\n                                y : infoY._handleLength\n                            },\n                            handleLengthRatio : {\n                                x : infoX._handleLengthRatio,\n                                y : infoY._handleLengthRatio\n                            },\n                            trackLength : {\n                                x : infoX._trackLength,\n                                y : infoY._trackLength\n                            },\n                            snappedHandleOffset : {\n                                x : infoX._snappedHandleOffset,\n                                y : infoY._snappedHandleOffset\n                            },\n                            isRTL: _isRTL,\n                            isRTLNormalized: _normalizeRTLCache\n                        };\n                    }\n                    \n                    _base.update(_strSync);\n                    \n                    var normalizeRTL = _normalizeRTLCache;\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\n                    var durationIsObject = type(duration) == TYPES.o;\n                    var completeCallback = durationIsObject ? duration.complete : complete;\n                    var i;\n                    var finalScroll = { };\n                    var specialEasing = {};\n                    var doScrollLeft;\n                    var doScrollTop;\n                    var animationOptions;\n                    var strEnd = 'end';\n                    var strBegin = 'begin';\n                    var strCenter = 'center';\n                    var strNearest = 'nearest';\n                    var strAlways = 'always';\n                    var strNever = 'never';\n                    var strIfNeeded = 'ifneeded';\n                    var strLength = LEXICON.l;\n                    var settingsAxis;\n                    var settingsScroll;\n                    var settingsBlock;\n                    var settingsMargin;\n                    var finalElement;\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function() {\n                        if(doScrollLeft)\n                            refreshScrollbarHandleOffset(true);\n                        if(doScrollTop)\n                            refreshScrollbarHandleOffset(false);\n                        completeCallback();\n                    };\n                    var checkSettingsStringValue = function (currValue, allowedValues) {\n                        for (i = 0; i < allowedValues[strLength]; i++) {\n                            if (currValue === allowedValues[i])\n                                return true;\n                        }\n                        return false;\n                    };\n                    var getRawScroll = function (isX, coordinates) {\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [ coordinates, coordinates ] : coordinates;\n\n                        if (type(coordinates) == TYPES.a)\n                            return isX ? coordinates[0] : coordinates[1];\n                        else if (type(coordinates) == TYPES.o) {\n                            //decides RTL normalization \"hack\" with .n\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n                            for (i = 0; i < coordinateProps[strLength]; i++)\n                                if (coordinateProps[i] in coordinates)\n                                    return coordinates[coordinateProps[i]];\n                        }\n                    };\n                    var getFinalScroll = function (isX, rawScroll) {\n                        var isString = type(rawScroll) == TYPES.s;\n                        var operator;\n                        var amount;\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n                        var currScroll = scrollInfo._currentScroll;\n                        var maxScroll = scrollInfo._maxScroll;\n                        var mult = ' * ';\n                        var finalValue;\n                        var isRTLisX = _isRTL && isX;\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n                        var strReplace = 'replace';\n                        var evalFunc = eval;\n                        var possibleOperator;\n                        if (isString) {\n                            //check operator\n                            if (rawScroll[strLength] > 2) {\n                                possibleOperator = rawScroll.substr(0, 2);\n                                if(inArray(possibleOperator, coordinatesOperators) > -1)\n                                    operator = possibleOperator;\n                            }\n\n                            //calculate units and shortcuts\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n                            rawScroll = rawScroll\n                            [strReplace](/min/g, 0) //'min' = 0%\n                            [strReplace](/</g, 0)   //'<'   = 0%\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\n                            [strReplace](/px/g, _strEmpty)\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\n                            [strReplace](/vw/g, mult + _viewportSize.w)\n                            [strReplace](/vh/g, mult + _viewportSize.h);\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n                        }\n                        else {\n                            amount = rawScroll;\n                        }\n\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\n                            switch (operator) {\n                                case '+=':\n                                    finalValue = operatorCurrScroll + amount;\n                                    break;\n                                case '-=':\n                                    finalValue = operatorCurrScroll - amount;\n                                    break;\n                                case '*=':\n                                    finalValue = operatorCurrScroll * amount;\n                                    break;\n                                case '/=':\n                                    finalValue = operatorCurrScroll / amount;\n                                    break;\n                                default:\n                                    finalValue = amount;\n                                    break;\n                            }\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\n                            finalValue *= negate ? -1 : 1;\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n                        }\n                        return finalValue === currScroll ? undefined : finalValue;\n                    };\n                    var getPerAxisValue = function (value, valueInternalType, defaultValue, allowedValues) {\n                        var resultDefault = [ defaultValue, defaultValue ];\n                        var valueType = type(value);\n                        var valueArrLength;\n                        var valueArrItem;\n\n                        //value can be [ string, or array of two strings ]\n                        if (valueType == valueInternalType) {\n                            value = [value, value];\n                        }\n                        else if (valueType == TYPES.a) {\n                            valueArrLength = value[strLength];\n                            if (valueArrLength > 2 || valueArrLength < 1)\n                                value = resultDefault;\n                            else {\n                                if (valueArrLength === 1)\n                                    value[1] = defaultValue;\n                                for (i = 0; i < valueArrLength; i++) {\n                                    valueArrItem = value[i];\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                                        value = resultDefault;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (valueType == TYPES.o)\n                            value = [ value[_strX]|| defaultValue, value[_strY] || defaultValue];\n                        else\n                            value = resultDefault;\n                        return { x : value[0], y : value[1] };\n                    };\n                    var generateMargin = function (marginTopRightBottomLeftArray) {\n                        var result = [ ];\n                        var currValue;\n                        var currValueType;\n                        var valueDirections = [ _strTop, _strRight, _strBottom, _strLeft ];\n                        for(i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n                            if(i === valueDirections[strLength])\n                                break;\n                            currValue = marginTopRightBottomLeftArray[i];\n                            currValueType = type(currValue);\n                            if(currValueType == TYPES.b)\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\n                            else\n                                result.push(currValueType == TYPES.n ? currValue : 0);\n                        }\n                        return result;\n                    };\n\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n                        //get settings\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\n                        var marginDefault = [ 0, 0, 0, 0 ];\n                        var marginType = type(margin);\n                        var marginLength;\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n                        if (finalElement[strLength] === 0)\n                            return;\n\n                        //margin can be [ boolean, number, array of 2, array of 4, object ]\n                        if (marginType == TYPES.n || marginType == TYPES.b)\n                            margin = generateMargin([margin, margin, margin, margin]);\n                        else if (marginType == TYPES.a) {\n                            marginLength = margin[strLength];\n                            if(marginLength === 2)\n                                margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\n                            else if(marginLength >= 4)\n                                margin = generateMargin(margin);\n                            else\n                                margin = marginDefault;\n                        }\n                        else if (marginType == TYPES.o)\n                            margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\n                        else\n                            margin = marginDefault;\n\n                        //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n                        settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n                        settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n                        settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n                        settingsMargin = margin;\n\n                        var viewportScroll = {\n                            l: _scrollHorizontalInfo._currentScroll,\n                            t: _scrollVerticalInfo._currentScroll\n                        };\n                        // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n                        var viewportOffset = _paddingElement.offset();\n\n                        //get coordinates\n                        var elementOffset = finalElement.offset();\n                        var doNotScroll = {\n                            x : settingsScroll.x == strNever || settingsAxis == _strY,\n                            y : settingsScroll.y == strNever || settingsAxis == _strX\n                        };\n                        elementOffset[_strTop] -= settingsMargin[0];\n                        elementOffset[_strLeft] -= settingsMargin[3];\n                        var elementScrollCoordinates = {\n                            x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                            y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n                        };\n                        if (_isRTL) {\n                            if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\n                                elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                            if (_rtlScrollBehavior.n && normalizeRTL)\n                                elementScrollCoordinates.x *= -1;\n                            if (_rtlScrollBehavior.i && normalizeRTL)\n                                elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n                        }\n\n                        //measuring is required\n                        if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                            var measuringElm = finalElement[0];\n                            var rawElementSize = _supportTransform ? measuringElm.getBoundingClientRect() : {\n                                width : measuringElm[LEXICON.oW],\n                                height : measuringElm[LEXICON.oH]\n                            };\n                            var elementSize = {\n                                w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                                h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                            };\n                            var finalizeBlock = function(isX) {\n                                var vars = getScrollbarVars(isX);\n                                var wh = vars._w_h;\n                                var lt = vars._left_top;\n                                var xy = vars._x_y;\n                                var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                                var blockIsCenter = settingsBlock[xy] == strCenter;\n                                var blockIsNearest = settingsBlock[xy] == strNearest;\n                                var scrollNever = settingsScroll[xy] == strNever;\n                                var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                                var vpSize = _viewportSize[wh];\n                                var vpOffset = viewportOffset[lt];\n                                var elSize = elementSize[wh];\n                                var elOffset = elementOffset[lt];\n                                var divide = blockIsCenter ? 2 : 1;\n                                var elementCenterOffset = elOffset + (elSize / 2);\n                                var viewportCenterOffset = vpOffset + (vpSize / 2);\n                                var isInView =\n                                    elSize <= vpSize\n                                    && elOffset >= vpOffset\n                                    && elOffset + elSize <= vpOffset + vpSize;\n\n                                if(scrollNever)\n                                    doNotScroll[xy] = true;\n                                else if(!doNotScroll[xy]) {\n                                    if (blockIsNearest || scrollIfNeeded) {\n                                        doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                                        blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                                    }\n                                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                                }\n                            };\n                            finalizeBlock(true);\n                            finalizeBlock(false);\n                        }\n\n                        if (doNotScroll.y)\n                            delete elementScrollCoordinates.y;\n                        if (doNotScroll.x)\n                            delete elementScrollCoordinates.x;\n\n                        coordinates = elementScrollCoordinates;\n                    }\n\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\n\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n                        if (durationIsObject) {\n                            duration.complete = proxyCompleteCallback;\n                            _viewportElement.animate(finalScroll, duration);\n                        }\n                        else {\n                            animationOptions = {\n                                duration: duration,\n                                complete: proxyCompleteCallback\n                            };\n                            if (type(easing) == TYPES.a || FRAMEWORK.isPlainObject(easing)) {\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                                animationOptions.specialEasing = specialEasing;\n                            }\n                            else {\n                                animationOptions.easing = easing;\n                            }\n                            _viewportElement.animate(finalScroll, animationOptions);\n                        }\n                    }\n                    else {\n                        if (doScrollLeft)\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n                        if (doScrollTop)\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n                    }\n                };\n\n                /**\n                 * Stops all scroll animations.\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\n                 */\n                _base.scrollStop = function (param1, param2, param3) {\n                    _viewportElement.stop(param1, param2, param3);\n                    return _base;\n                };\n\n                /**\n                 * Returns all relevant elements.\n                 * @param elementName The name of the element which shall be returned.\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\n                 */\n                _base.getElements = function (elementName) {\n                    var obj = {\n                        target: _targetElementNative,\n                        host: _hostElementNative,\n                        padding: _paddingElementNative,\n                        viewport: _viewportElementNative,\n                        content: _contentElementNative,\n                        scrollbarHorizontal: {\n                            scrollbar: _scrollbarHorizontalElement[0],\n                            track: _scrollbarHorizontalTrackElement[0],\n                            handle: _scrollbarHorizontalHandleElement[0]\n                        },\n                        scrollbarVertical: {\n                            scrollbar: _scrollbarVerticalElement[0],\n                            track: _scrollbarVerticalTrackElement[0],\n                            handle: _scrollbarVerticalHandleElement[0]\n                        },\n                        scrollbarCorner: _scrollbarCornerElement[0]\n                    };\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n                };\n\n                /**\n                 * Returns a object which describes the current state of this instance.\n                 * @param stateProperty A specific property from the state object which shall be returned.\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\n                 */\n                _base.getState = function (stateProperty) {\n                    function prepare(obj) {\n                        if (!FRAMEWORK.isPlainObject(obj))\n                            return obj;\n                        var extended = extendDeep({}, obj);\n                        var changePropertyName = function (from, to) {\n                            if (extended[LEXICON.hOP](from)) {\n                                extended[to] = extended[from];\n                                delete extended[from];\n                            }\n                        };\n                        changePropertyName('w', _strWidth); //change w to width\n                        changePropertyName('h', _strHeight); //change h to height\n                        delete extended.c; //delete c (the 'changed' prop)\n                        return extended;\n                    };\n                    var obj = {\n                        destroyed: !!prepare(_destroyed),\n                        sleeping: !!prepare(_sleeping),\n                        autoUpdate: prepare(!_mutationObserversConnected),\n                        widthAuto: prepare(_widthAutoCache),\n                        heightAuto: prepare(_heightAutoCache),\n                        padding: prepare(_cssPaddingCache),\n                        overflowAmount: prepare(_overflowAmountCache),\n                        hideOverflow: prepare(_hideOverflowCache),\n                        hasOverflow: prepare(_hasOverflowCache),\n                        contentScrollSize: prepare(_contentScrollSizeCache),\n                        viewportSize: prepare(_viewportSize),\n                        hostSize: prepare(_hostSizeCache),\n                        documentMixed : prepare(_documentMixed)\n                    };\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n                };\n\n                /**\n                 * Gets all or specific extension instance.\n                 * @param extName The name of the extension from which the instance shall be got.\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\n                 */\n                _base.ext = function(extName) {\n                    var result;\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\n                    var i = 0;\n                    if(type(extName) == TYPES.s) {\n                        if(_extensions[LEXICON.hOP](extName)) {\n                            result = extendDeep({}, _extensions[extName]);\n                            for (; i < privateMethods.length; i++)\n                                delete result[privateMethods[i]];\n                        }\n                    }\n                    else {\n                        result = { };\n                        for(i in _extensions)\n                            result[i] = extendDeep({ }, _base.ext(i));\n                    }\n                    return result;\n                };\n\n                /**\n                 * Adds a extension to this instance.\n                 * @param extName The name of the extension which shall be added.\n                 * @param extensionOptions The extension options which shall be used.\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\n                 */\n                _base.addExt = function(extName, extensionOptions) {\n                    var registeredExtensionObj = _plugin.extension(extName);\n                    var instance;\n                    var instanceAdded;\n                    var instanceContract;\n                    var contractResult;\n                    var contractFulfilled = true;\n                    if(registeredExtensionObj) {\n                        if(!_extensions[LEXICON.hOP](extName)) {\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\n                                extendDeep({ }, registeredExtensionObj.defaultOptions),\n                                FRAMEWORK,\n                                COMPATIBILITY);\n\n                            if (instance) {\n                                instanceContract = instance.contract;\n                                if (type(instanceContract) == TYPES.f) {\n                                    contractResult = instanceContract(window);\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                                }\n                                if(contractFulfilled) {\n                                    _extensions[extName] = instance;\n                                    instanceAdded = instance.added;\n                                    if(type(instanceAdded) == TYPES.f)\n                                        instanceAdded(extensionOptions);\n\n                                    return _base.ext(extName);\n                                }\n                            }\n                        }\n                        else\n                            return _base.ext(extName);\n                    }\n                    else\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n                };\n\n                /**\n                 * Removes a extension from this instance.\n                 * @param extName The name of the extension which shall be removed.\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\n                 */\n                _base.removeExt = function(extName) {\n                    var instance = _extensions[extName];\n                    var instanceRemoved;\n                    if(instance) {\n                        delete _extensions[extName];\n\n                        instanceRemoved = instance.removed;\n                        if(type(instanceRemoved) == TYPES.f)\n                            instanceRemoved();\n\n                        return true;\n                    }\n                    return false;\n                };\n\n                /**\n                 * Constructs the plugin.\n                 * @param targetElement The element to which the plugin shall be applied.\n                 * @param options The initial options of the plugin.\n                 * @param extensions The extension(s) which shall be added right after the initialization.\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\n                 */\n                function construct(targetElement, options, extensions) {\n                    _defaultOptions = globals.defaultOptions;\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\n\n                    //parse & set options but don't update\n                    setOptions(extendDeep({ }, _defaultOptions, options));\n\n                    //check if the plugin hasn't to be initialized\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.x && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n                        dispatchCallback(\"onInitializationWithdrawn\");\n                        return false;\n                    }\n\n                    _cssCalc = globals.cssCalc;\n                    _msieVersion = globals.msie;\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\n                    _supportTransition = globals.supportTransition;\n                    _supportTransform = globals.supportTransform;\n                    _supportPassiveEvents = globals.supportPassiveEvents;\n                    _supportResizeObserver = globals.supportResizeObserver;\n                    _supportMutationObserver = globals.supportMutationObserver;\n                    _restrictedMeasuring = globals.restrictedMeasuring;\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\n                    _documentElementNative = _documentElement[0];\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n                    _windowElementNative = _windowElement[0];\n                    _htmlElement = findFirst(_documentElement, 'html');\n                    _bodyElement =  findFirst(_htmlElement, 'body');\n                    _targetElement = FRAMEWORK(targetElement);\n                    _targetElementNative = _targetElement[0];\n                    _isTextarea = _targetElement.is('textarea');\n                    _isBody = _targetElement.is('body');\n                    _documentMixed = _documentElementNative !== document;\n\n                    var initBodyScroll;\n                    if (_isBody) {\n                        initBodyScroll = {};\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n                    }\n\n                    //build OverlayScrollbars DOM and Events\n                    setupStructureDOM();\n                    setupStructureEvents();\n\n                    //build Scrollbars DOM and Events\n                    setupScrollbarsDOM();\n                    setupScrollbarEvents(true);\n                    setupScrollbarEvents(false);\n\n                    //build Scrollbar Corner DOM and Events\n                    setupScrollbarCornerDOM();\n                    setupScrollbarCornerEvents();\n\n                    //create mutation observers\n                    createMutationObservers();\n\n                    if(_isBody) {\n                        //apply the body scroll to handle it right in the update method\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\n\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n                        if(document.activeElement == targetElement && _viewportElementNative.focus) {\n                            //set a tabindex to make the viewportElement focusable\n                            _viewportElement.attr('tabindex', '-1');\n                            _viewportElementNative.focus();\n                            /* the tabindex has to be removed due to;\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\n                             */\n                            _viewportElement.one(_strMouseTouchDownEvent, function() {\n                                _viewportElement.removeAttr('tabindex');\n                            });\n                        }\n                    }\n\n                    //build resize observer for the host element\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n                    //update for the first time & initialize cache\n                    _base.update(_strAuto);\n\n                    //the plugin is initialized now!\n                    _initialized = true;\n                    dispatchCallback(\"onInitialized\");\n\n                    //call all callbacks which would fire before the initialized was complete\n                    each(_callbacksInitQeueue, function(index, value) { dispatchCallback(value.n, value.a); });\n                    _callbacksInitQeueue = [ ];\n\n                    //add extensions\n                    if(type(extensions) == TYPES.s)\n                        extensions = [ extensions ];\n                    if(COMPATIBILITY.isA(extensions))\n                        each(extensions, function (index, value) {_base.addExt(value); });\n                    else if(FRAMEWORK.isPlainObject(extensions))\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\n\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n                    setTimeout(function () {\n                        if (_supportTransition && !_destroyed)\n                            addClass(_hostElement, _classNameHostTransition);\n                    }, 333);\n\n                    return _initialized;\n                }\n\n                if (construct(pluginTargetElement, options, extensions)) {\n                    INSTANCES(pluginTargetElement, _base);\n                    return _base;\n                }\n                _base = undefined;\n            }\n\n            /**\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\n             * @param options The custom options with which the plugin shall be initialized.\n             * @param extensions The extension(s) which shall be added right after initialization.\n             * @returns {*}\n             */\n            _plugin = window[PLUGINNAME] = function(pluginTargetElements, options, extensions) {\n                if(arguments[LEXICON.l] === 0)\n                    return this;\n\n                var arr = [ ];\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n                var inst;\n                var result;\n\n                //pluginTargetElements is null or undefined\n                if(!pluginTargetElements)\n                    return optsIsPlainObj || !options ? result : arr;\n\n                /*\n                   pluginTargetElements will be converted to:\n                   1. A jQueryElement Array\n                   2. A HTMLElement Array\n                   3. A Array with a single HTML Element\n                   so pluginTargetElements is always a array.\n                */\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [ pluginTargetElements[0] || pluginTargetElements ];\n                initOverlayScrollbarsStatics();\n\n                if(pluginTargetElements[LEXICON.l] > 0) {\n                    if(optsIsPlainObj) {\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\n                            inst = v;\n                            if(inst !== undefined)\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n                        });\n                    }\n                    else {\n                        FRAMEWORK.each(pluginTargetElements, function(i, v) {\n                            inst = INSTANCES(v);\n                            if((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\n                                arr.push(inst);\n                            else if(options === undefined)\n                                arr.push(inst);\n                        });\n                    }\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n                }\n                return result;\n            };\n\n            /**\n             * Returns a object which contains global information about the plugin and each instance of it.\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\n             */\n            _plugin.globals = function () {\n                initOverlayScrollbarsStatics();\n                var globals = FRAMEWORK.extend(true, { }, _pluginsGlobals);\n                delete globals['msie'];\n                return globals;\n            };\n\n            /**\n             * Gets or Sets the default options for each new plugin initialization.\n             * @param newDefaultOptions The object with which the default options shall be extended.\n             */\n            _plugin.defaultOptions = function(newDefaultOptions) {\n                initOverlayScrollbarsStatics();\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\n                if(newDefaultOptions === undefined)\n                    return FRAMEWORK.extend(true, { }, currDefaultOptions);\n\n                //set the new default options\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, { }, currDefaultOptions , _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n            };\n\n            /**\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\n             */\n            _plugin.valid = function (osInstance) {\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n            };\n\n            /**\n             * Registers, Unregisters or returns a extension.\n             * Register: Pass the name and the extension. (defaultOptions is optional)\n             * Unregister: Pass the name and anything except a function as extension parameter.\n             * Get extension: Pass the name of the extension which shall be got.\n             * Get all extensions: Pass no arguments.\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\n             * @param defaultOptions The default options which shall be used for the registered extension.\n             */\n            _plugin.extension = function(extensionName, extension, defaultOptions) {\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n                var argLen = arguments[LEXICON.l];\n                var i = 0;\n                if(argLen < 1 || !extNameTypeString) {\n                    //return a copy of all extension objects\n                    return FRAMEWORK.extend(true, { length : _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\n                }\n                else if(extNameTypeString) {\n                    if(COMPATIBILITY.type(extension) == TYPES.f) {\n                        //register extension\n                        _pluginsExtensions.push({\n                            name : extensionName,\n                            extensionFactory : extension,\n                            defaultOptions : defaultOptions\n                        });\n                    }\n                    else {\n                        for(; i < _pluginsExtensions[LEXICON.l]; i++) {\n                            if (_pluginsExtensions[i].name === extensionName) {\n                                if(argLen > 1)\n                                    _pluginsExtensions.splice(i, 1); //remove extension\n                                else\n                                    return FRAMEWORK.extend(true, { }, _pluginsExtensions[i]); //return extension with the given name\n                            }\n                        }\n                    }\n                }\n            };\n\n            return _plugin;\n        })();\n\n        if(JQUERY && JQUERY.fn) {\n            /**\n             * The jQuery initialization interface.\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\n             * @param extensions The extension(s) which shall be added right after initialization.\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\n             */\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\n                var _elements = this;\n                if(JQUERY.isPlainObject(options)) {\n                    JQUERY.each(_elements, function() { PLUGIN(this, options, extensions); });\n                    return _elements;\n                }\n                else\n                    return PLUGIN(_elements, options);\n            };\n        }\n        return PLUGIN;\n    }\n));","// document.currentScript polyfill by Adam Miller\n\n// MIT license\n\n(function(document){\n  var currentScript = \"currentScript\",\n      scripts = document.getElementsByTagName('script'); // Live NodeList collection\n\n  // If browser needs currentScript polyfill, add get currentScript() to the document object\n  if (!(currentScript in document)) {\n    Object.defineProperty(document, currentScript, {\n      get: function(){\n\n        // IE 6-10 supports script readyState\n        // IE 10+ support stack trace\n        try { throw new Error(); }\n        catch (err) {\n\n          // Find the second match for the \"at\" string to get file src url from stack.\n          // Specifically works with the format of stack traces in IE.\n          var i, res = ((/.*at [^\\(]*\\((.*):.+:.+\\)$/ig).exec(err.stack) || [false])[1];\n\n          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag\n          for(i in scripts){\n            if(scripts[i].src == res || scripts[i].readyState == \"interactive\"){\n              return scripts[i];\n            }\n          }\n\n          // If no match, return null\n          return null;\n        }\n      }\n    });\n  }\n})(document);\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    require('current-script-polyfill')\n  }\n\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import OverlayScrollbars from \"overlayscrollbars\";\n\nimport \"overlayscrollbars/css/OverlayScrollbars.min.css\";\n\nexport default {\n  install(Vue) {\n    Vue.directive(\"scrollbar\", {\n      bind: (el, { value: options }) => {\n        const cloned = !options ? {} : JSON.parse(JSON.stringify(options));\n        el._os = OverlayScrollbars(el, cloned);\n      },\n      componentUpdated: el => {\n        el._os.update();\n      },\n      unbind: el => {\n        el._os.destroy();\n      }\n    });\n  }\n};\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}